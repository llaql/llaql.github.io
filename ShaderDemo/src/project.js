window.__require=function e(t,n,o){function r(i,c){if(!n[i]){if(!t[i]){var s=i.split("/");if(s=s[s.length-1],!t[s]){var l="function"==typeof __require&&__require;if(!c&&l)return l(s,!0);if(a)return a(s,!0);throw new Error("Cannot find module '"+i+"'")}}var p=n[i]={exports:{}};t[i][0].call(p.exports,function(e){return r(t[i][1][e]||e)},p,p.exports,e,t,n,o)}return n[i].exports}for(var a="function"==typeof __require&&__require,i=0;i<o.length;i++)r(o[i]);return r}({FileDrop:[function(e,t,n){"use strict";cc._RF.push(t,"e3712TBsAFKELlEcit8NNJa","FileDrop");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=cc._decorator,i=a.ccclass,c=a.property,s=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.onDropHandler=null,t}return o(t,e),t.prototype.onLoad=function(){var e=document.getElementById("GameCanvas");e.addEventListener("dragover",this.handleDragOver,!1),e.addEventListener("drop",this.handleFileSelect.bind(this),!1)},t.prototype.handleDragOver=function(e){e.stopPropagation(),e.preventDefault(),e.dataTransfer.dropEffect="copy"},t.prototype.handleFileSelect=function(e){e.stopPropagation(),e.preventDefault();var t=e.dataTransfer.files;Promise.all(Array.from(t).map(l)).then(this.readerOnLoadHandler.bind(this))},t.prototype.readerOnLoadHandler=function(e){this.onDropHandler&&this.onDropHandler.emit([e])},r([c(cc.Component.EventHandler)],t.prototype,"onDropHandler",void 0),t=r([i],t)}(cc.Component);function l(e){var t=e.name,n=e.type;return new Promise(function(o,r){var a=new FileReader;switch(e.type){case"image/png":case"image/jpg":case"image/jpeg":a.readAsArrayBuffer(e),a.onload=function(r){var a=new Image,i=window.URL.createObjectURL(new Blob([r.target.result],{type:e.type}));a.src=i,a.onload=function(){o({name:t,type:n,result:a})}};break;default:a.readAsText(e),a.onload=function(e){var r={name:t,type:n,result:e.target.result};o(r)}}})}n.default=s,cc._RF.pop()},{}],InputePropertys:[function(e,t,n){"use strict";cc._RF.push(t,"4b50aa6AZZKkancd/SiKeIk","InputePropertys");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("./InputeProperty"),i=cc._decorator,c=i.ccclass,s=i.property,l=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=null,t.ips=[],t}return o(t,e),t.prototype.setTitle=function(e){this.title.string=e},t.prototype.setToggleActions=function(e,t,n){this.title.string=e,this.ips[0].setToggleAction(e,t[0],n[0])},t.prototype.setEditorActions=function(e,t,n){var o=this;this.title.string=e,this.ips.forEach(function(e){e.node.active=!1}),n.forEach(function(n,r){o.ips[r].node.active=!0,o.ips[r].setEditorAction(e,t[r],n)})},r([s(cc.Label)],t.prototype,"title",void 0),r([s(a.default)],t.prototype,"ips",void 0),t=r([c],t)}(cc.Component);n.default=l,cc._RF.pop()},{"./InputeProperty":"InputeProperty"}],InputeProperty:[function(e,t,n){"use strict";cc._RF.push(t,"1fe4dbUy8NKXYXiGN7aFvYH","InputeProperty");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=cc._decorator,i=a.ccclass,c=a.property,s=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.title=null,t.editor=null,t.toggle=null,t.paramName="",t}return o(t,e),t.prototype.setEditorAction=function(e,t,n){this.paramName=e,this.editorAction=n,this.editor.string=t+"";var o=new cc.Component.EventHandler;o.target=this.node,o.component="InputeProperty",o.handler="doEditorAction",this.editor.editingDidEnded=[o]},t.prototype.setToggleAction=function(e,t,n){this.paramName=e,this.toggleAction=n,this.toggle.isChecked=1===t;var o=new cc.Component.EventHandler;o.target=this.node,o.component="InputeProperty",o.handler="doToggleAction",this.toggle.clickEvents=[o]},t.prototype.doEditorAction=function(){this.editorAction(this.paramName,this.editor.string)},t.prototype.doToggleAction=function(){this.toggleAction(this.paramName,this.toggle.isChecked?"0":"1")},r([c(cc.Label)],t.prototype,"title",void 0),r([c(cc.EditBox)],t.prototype,"editor",void 0),r([c(cc.Toggle)],t.prototype,"toggle",void 0),t=r([i],t)}(cc.Component);n.default=s,cc._RF.pop()},{}],MVP:[function(e,t,n){"use strict";cc._RF.push(t,"9253c3ZCZZK0LwBg6ltErwl","MVP"),Object.defineProperty(n,"__esModule",{value:!0}),n.MVP="\n#define useModel\n#define use2DPos\nprecision highp float;\n\n\nuniform mat4 viewProj;\n\n#ifdef use2DPos\nattribute vec2 a_position;\n#else\nattribute vec3 a_position;\n#endif\n\nattribute lowp vec4 a_color;\n#ifdef useTint\nattribute lowp vec4 a_color0;\n#endif\n\n#ifdef useModel\nuniform mat4 model;\n#endif\n\nattribute mediump vec2 a_uv0;\nvarying mediump vec2 v_uv0;\n\nvarying lowp vec4 v_light;\n#ifdef useTint\nvarying lowp vec4 v_dark;\n#endif\n\nvoid main () {\n    mat4 mvp;\n    #ifdef useModel\n      mvp = viewProj * model;\n    #else\n      mvp = viewProj;\n    #endif\n\n    #ifdef use2DPos\n    vec4 pos = mvp * vec4(a_position, 0, 1);\n    #else\n    vec4 pos = mvp * vec4(a_position, 1);\n    #endif\n\n    v_light = a_color;\n    #ifdef useTint\n      v_dark = a_color0;\n    #endif\n\n    v_uv0 = a_uv0;\n\n    gl_Position = pos;\n}",cc._RF.pop()},{}],ShaderAclouisCircle:[function(e,t,n){"use strict";cc._RF.push(t,"960d0NG9X5B+Km4Slj75Juo","ShaderAclouisCircle");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderAclouisCircle",params:[{name:"iResolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"uvfix",type:c.RENDERER_PARAMS.PARAM_FLOAT4},{name:"isClockwise",type:c.RENDERER_PARAMS.PARAM_INT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"scale",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"arcSize",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"arcCountRef",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"xUseAbs",type:c.RENDERER_PARAMS.PARAM_INT},{name:"yUseAbs",type:c.RENDERER_PARAMS.PARAM_INT},{name:"xUseExp",type:c.RENDERER_PARAMS.PARAM_INT},{name:"yUseExp",type:c.RENDERER_PARAMS.PARAM_INT},{name:"rColor",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"gColor",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"bColor",type:c.RENDERER_PARAMS.PARAM_FLOAT}],defines:[],vert:a.MVP,frag:"\n\n        // Shader Toy\n        // https://www.shadertoy.com/view/3sdSDH\n\n        uniform sampler2D texture;\n        uniform vec2    iResolution;\n        uniform float   time;\n        uniform vec4    uvfix;\n        varying vec2    v_uv0;\n\n        uniform int    isClockwise;\n        uniform int    xUseAbs;\n        uniform int    yUseAbs;\n        uniform int    xUseExp;\n        uniform int    yUseExp;\n        uniform float   speed;\n        uniform float   scale;\n        uniform float   arcSize;\n        uniform float   arcCountRef;\n        uniform float   rColor;\n        uniform float   gColor;\n        uniform float   bColor;\n\n\n        vec2 bigger(in vec2 uv){\n            return uvfix.xy * uv + uvfix.zw;\n        }\n\n        void main(){\n\n            vec2 p = bigger(v_uv0);\n            p = (p * 2.) - 1.;\n\n            float clock = speed * time;\n\n            float angle = atan(p.x,p.y);\n            if(isClockwise == 1){\n                angle *= -1.0;\n            }\n\n            float radius = length(p) * 1./scale;\n            vec2 uv = vec2(angle/clock,radius);\n            uv = (2.0 * uv) - 1.;\n\n            //float xValue = ((sin(arcCountRef * uv.x * clock)));\n\n            float xValue = ((sin(arcCountRef * uv.x * clock)));\n            float yValue = (abs(1.0 / (50.0 * uv.y)));\n\n            if(xUseAbs==1){\n                xValue = abs(xValue);\n            }\n\n            if(yUseAbs==1){\n                yValue = abs(yValue);\n            }\n\n            if(xUseExp==1){\n                xValue = exp(xValue);\n            }\n\n            if(yUseExp==1){\n                yValue = exp(yValue);\n            }\n\n            vec3 horBeam = vec3( xValue * yValue * arcSize);\n            // vec4 tex = texture2D(texture, v_uv0);\n            vec3 horColour = vec3(rColor, gColor, bColor);\n            gl_FragColor = vec4( horBeam * horColour , horBeam.r * horBeam.g * horBeam.b);\n        }\n\n\n        "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.isClockwise=!0,t.speed=2,t.scale=1,t.arcSize=1,t.arcCountRef=1,t.xUseAbs=!1,t.yUseAbs=!0,t.xUseExp=!1,t.yUseExp=!1,t.rColor=.4,t.gColor=.4,t.bColor=1,t.time=0,t}return o(t,e),t.prototype.doStart=function(e,t,n){var o=cc.v2(e.node.getContentSize().width,e.node.getContentSize().height),r=i.getUVfix(e.spriteFrame);this.time=10,t.setParamValue("iResolution",o),t.setParamValue("uvfix",r),t.setParamValue("time",this.time),t.setParamValue("isClockwise",this.isClockwise?1:0),t.setParamValue("speed",this.speed),t.setParamValue("scale",this.scale),t.setParamValue("arcSize",this.arcSize),t.setParamValue("arcCountRef",this.arcCountRef),t.setParamValue("xUseAbs",this.xUseAbs?1:0),t.setParamValue("yUseAbs",this.yUseAbs?1:0),t.setParamValue("xUseExp",this.xUseExp?1:0),t.setParamValue("yUseExp",this.yUseExp?1:0),t.setParamValue("rColor",this.rColor),t.setParamValue("gColor",this.gColor),t.setParamValue("bColor",this.bColor)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f({tooltip:"\u9806\u6642\u9418\u65cb\u8f49"})],t.prototype,"isClockwise",void 0),r([f({type:cc.Float,tooltip:"\u65cb\u8f49\u901f\u7387"})],t.prototype,"speed",void 0),r([f({type:cc.Float,tooltip:"\u5927\u5c0f"})],t.prototype,"scale",void 0),r([f({type:cc.Float,tooltip:"\u5f27\u5ea6\u5bec\u5ea6"})],t.prototype,"arcSize",void 0),r([f({type:cc.Float,tooltip:"\u5f27\u5ea6\u6578\u91cf\u53c3\u6578"})],t.prototype,"arcCountRef",void 0),r([f({tooltip:"uv.x\u51fd\u6578\u589e\u52a0\u7d55\u5c0d\u503c\u8a08\u7b97"})],t.prototype,"xUseAbs",void 0),r([f({tooltip:"uv.y\u51fd\u6578\u589e\u52a0\u7d55\u5c0d\u503c\u8a08\u7b97"})],t.prototype,"yUseAbs",void 0),r([f({tooltip:"uv.x\u51fd\u6578\u589e\u52a0exp\u8a08\u7b97"})],t.prototype,"xUseExp",void 0),r([f({tooltip:"uv.y\u51fd\u6578\u589e\u52a0exp\u8a08\u7b97"})],t.prototype,"yUseExp",void 0),r([f({type:cc.Float,tooltip:"\u5716\u5f62R\u8272\u5f69",slide:!0,min:0,max:1,visible:function(){return!this.useTextureColor}})],t.prototype,"rColor",void 0),r([f({type:cc.Float,tooltip:"\u5716\u5f62G\u8272\u5f69",slide:!0,min:0,max:1,visible:function(){return!this.useTextureColor}})],t.prototype,"gColor",void 0),r([f({type:cc.Float,tooltip:"\u5716\u5f62B\u8272\u5f69",slide:!0,min:0,max:1,visible:function(){return!this.useTextureColor}})],t.prototype,"bColor",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderBallOfFire:[function(e,t,n){"use strict";cc._RF.push(t,"5c87fQm9PZOubQskgV3+1mg","ShaderBallOfFire");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l=cc._decorator,p=l.ccclass,u=l.property,f={name:"ShaderBallOfFire",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"centerSize",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"size",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"count",type:c.RENDERER_PARAMS.PARAM_INT},{name:"glowColor",type:c.RENDERER_PARAMS.PARAM_FLOAT4},{name:"clearColor",type:c.RENDERER_PARAMS.PARAM_INT}],vert:a.MVP,frag:"\n\n\n        varying vec2 v_uv0;\n        uniform vec4 uvfix;\n        uniform float time;\n        uniform int count;\n        uniform float centerSize;\n        uniform float size;\n        uniform float speed;\n        uniform vec4 glowColor;\n        uniform int clearColor;\n\n        vec2 bigger(in vec2 uv){\n            return (uvfix.xy - uvfix.zw) * uv;\n        }\n\n\n        float snoise(vec3 uv, float res)\n        {\n            const vec3 s = vec3(1e0, 1e2, 1e3);\n\n            uv *= res;\n\n            vec3 uv0 = floor(mod(uv, res))*s;\n            vec3 uv1 = floor(mod(uv+vec3(1.), res))*s;\n\n            vec3 f = fract(uv);\n            f = f*f*(3.0-2.0*f);\n\n            vec4 v = vec4(uv0.x+uv0.y+uv0.z, uv1.x+uv0.y+uv0.z,\n                        uv0.x+uv1.y+uv0.z, uv1.x+uv1.y+uv0.z);\n\n            vec4 r = fract(sin(v*1e-1)*1e3);\n            float r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\n            r = fract(sin((v + uv1.z - uv0.z)*1e-1)*1e3);\n            float r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\n            return mix(r0, r1, f.z)*2.-1.;\n        }\n\n        void main( )\n        {\n            vec2 uv = bigger(v_uv0.xy);\n            uv.y = 1. - uv.y;\n            //\u7f6e\u4e2d\n            uv = uv-vec2(0.5,0.5);\n\n            float color = centerSize - (size*length(2.*uv));\n\n            vec3 coord = vec3(atan(uv.x,uv.y)/6.2832+0.5, length(uv)*speed, .5);\n\n\n            for(int i = 1; i <= 10; i++)\n            {\n                if(i>count){\n                    break;\n                }\n                float power = pow(2.0, float(i));\n                color += (1.5 / power) * snoise(coord + vec3(0.,-time*.05, time*.01), power*16.);\n            }\n            vec4 tempColor = vec4( color, pow(max(color,0.),2.), pow(max(color,0.),3.), 1.0)*glowColor;\n            float alpha = 0.;\n            if(clearColor == 1){\n                alpha = tempColor.r;\n            } else if(clearColor == 2){\n                alpha = tempColor.g;\n            } else if(clearColor == 3){\n                alpha = tempColor.b;\n            } else if(clearColor == 4){\n                alpha = tempColor.r*tempColor.g;\n            } else if(clearColor == 5){\n                alpha = tempColor.r*tempColor.b;\n            } else if(clearColor == 6){\n                alpha = tempColor.g*tempColor.b;\n            } else if(clearColor == 7){\n                alpha = tempColor.r*tempColor.g*tempColor.b;\n            }\n            gl_FragColor = vec4(tempColor.rgb,alpha*glowColor.a);\n        }"};s.shaderManager.addShader(f);var d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=f,t.time=0,t.centerSize=3,t.size=4,t.speed=.4,t.count=7,t.color=cc.color(255,102,38.25),t.clearColor=1,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0,t.setParamValue("time",this.time),t.setParamValue("count",this.count),t.setParamValue("centerSize",this.centerSize),t.setParamValue("size",this.size),t.setParamValue("speed",this.speed),t.setParamValue("glowColor",{x:this.color.getR()/255,y:this.color.getG()/255,z:this.color.getB()/255,w:this.color.getA()/255}),t.setParamValue("clearColor",this.clearColor)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([u(cc.Float)],t.prototype,"centerSize",void 0),r([u(cc.Float)],t.prototype,"size",void 0),r([u(cc.Float)],t.prototype,"speed",void 0),r([u(cc.Integer)],t.prototype,"count",void 0),r([u(cc.Color)],t.prototype,"color",void 0),r([u({type:cc.Enum(i.CLEAR_COLOR)})],t.prototype,"clearColor",void 0),t=r([p],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderClouds:[function(e,t,n){"use strict";cc._RF.push(t,"f3a42nBtYJMLoAuU2mNZFXi","ShaderClouds");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderClouds",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"rotation",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"cloudscale",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"clouddark",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"cloudlight",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"cloudcover",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"cloudalpha",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"clouddot",type:c.RENDERER_PARAMS.PARAM_FLOAT}],vert:a.MVP,frag:"\n    #ifdef GL_ES\n    precision lowp float;\n    #endif\n\n    uniform vec4 color;\n    uniform float time;\n    uniform float rotation;\n    uniform vec2 resolution;\n\n    mat2 rotationX( in float angle ) {\n        return mat2(\tcos(radians(angle)),\t-sin(radians(angle)),\n                        sin(radians(angle)),\t cos(radians(angle)));\n    }\n\n    uniform float cloudscale;\n    uniform float speed;\n    uniform float clouddark;\n    uniform float cloudlight;\n    uniform float cloudcover;\n    uniform float cloudalpha;\n    uniform float clouddot;\n    const float skytint = 0.5;\n    const vec3 skycolour1 = vec3(0.2, 0.4, 0.6);\n    const vec3 skycolour2 = vec3(0.4, 0.7, 1.0);\n\n    const mat2 m = mat2( 1.6,  1.2, -1.2,  1.6 );\n\n    vec2 hash( vec2 p ) {\n        p = vec2(dot(p,vec2(127.1,311.7)), dot(p,vec2(269.5,183.3)));\n        return -1.0 + 2.0*fract(sin(p)*43758.5453123);\n    }\n\n    float noise( in vec2 p ) {\n        const float K1 = 0.366025404; // (sqrt(3)-1)/2;\n        const float K2 = 0.211324865; // (3-sqrt(3))/6;\n        vec2 i = floor(p + (p.x+p.y)*K1);\n        vec2 a = p - i + (i.x+i.y)*K2;\n        vec2 o = (a.x>a.y) ? vec2(1.0,0.0) : vec2(0.0,1.0); //vec2 of = 0.5 + 0.5*vec2(sign(a.x-a.y), sign(a.y-a.x));\n        vec2 b = a - o + K2;\n        vec2 c = a - 1.0 + 2.0*K2;\n        vec3 h = max(0.5-vec3(dot(a,a), dot(b,b), dot(c,c) ), 0.0 );\n        vec3 n = h*h*h*h*vec3( dot(a,hash(i+0.0)), dot(b,hash(i+o)), dot(c,hash(i+1.0)));\n        return dot(n, vec3(clouddot));\n    }\n\n    float fbm(vec2 n) {\n        float total = 0.0, amplitude = 0.1;\n        for (int i = 0; i < 7; i++) {\n            total += noise(n) * amplitude;\n            n = m * n;\n            amplitude *= 0.4;\n        }\n        return total;\n    }\n\n    // -----------------------------------------------\n\n    void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        vec2 uv = p*vec2(resolution.x/resolution.y,1.0);\n        float t = time * speed;\n        float q = fbm(uv * cloudscale * 0.5);\n\n        //ridged noise shape\n        float r = 0.0;\n        uv *= cloudscale;\n        uv -= (q - vec2(t, 0.0)) * rotationX(rotation);\n        float weight = 0.8;\n        for (int i=0; i<8; i++){\n            r += abs(weight*noise( uv ));\n            uv = m*uv + vec2(t, 0.0) * rotationX(rotation);\n            weight *= 0.7;\n        }\n\n        //noise shape\n        float f = 0.0;\n        uv = p*vec2(resolution.x/resolution.y,1.0);\n        uv *= cloudscale;\n        uv -= (q - vec2(t, 0.0)) * rotationX(rotation);\n        weight = 0.7;\n        for (int i=0; i<8; i++){\n            f += weight*noise( uv );\n            uv = m*uv + vec2(t, 0.0) * rotationX(rotation);\n            weight *= 0.6;\n        }\n\n        f *= r + f;\n\n        //noise colour\n        float c = 0.0;\n        t = time * speed * 2.0;\n        uv = p*vec2(resolution.x/resolution.y,1.0);\n        uv *= cloudscale*2.0;\n        uv -= (q - vec2(t, 0.0)) * rotationX(rotation);\n        weight = 0.4;\n        for (int i=0; i<7; i++){\n            c += weight*noise( uv );\n            uv = m*uv + vec2(t, 0.0) * rotationX(rotation);\n            weight *= 0.6;\n        }\n\n        //noise ridge colour\n        float c1 = 0.0;\n        t = time * speed * 3.0;\n        uv = p*vec2(resolution.x/resolution.y,1.0);\n        uv *= cloudscale*3.0;\n        uv -= (q - vec2(t, 0.0)) * rotationX(rotation);\n        weight = 0.4;\n        for (int i=0; i<7; i++){\n            c1 += abs(weight*noise( uv ));\n            uv = m*uv + vec2(t, 0.0) * rotationX(rotation);\n            weight *= 0.6;\n        }\n\n        c += c1;\n\n        vec3 skycolour = mix(skycolour2, skycolour1, p.y);\n        vec3 cloudcolour = vec3(1.1, 1.1, 0.9) * clamp((clouddark + cloudlight*c), 0.0, 1.0);\n\n        f = cloudcover + cloudalpha*f*r;\n\n        vec3 result = mix(skycolour, clamp(skytint * skycolour + cloudcolour, 0.0, 1.0), clamp(f + c, 0.0, 1.0));\n\n        float alpha = min(min(result.r, result.g), result.b);\n        gl_FragColor = vec4( result, alpha );\n    }\n"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.rotation=0,t.speed=.03,t.cloudscale=1.1,t.clouddark=.6,t.cloudlight=.4,t.cloudcover=.2,t.cloudalpha=8,t.clouddot=70,t.skytint=.5,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=cc.winSize,r=cc.v2(o.width,o.height);t.setParamValue("rotation",this.rotation),t.setParamValue("resolution",r),t.setParamValue("speed",this.speed),t.setParamValue("cloudscale",this.cloudscale),t.setParamValue("clouddark",this.clouddark),t.setParamValue("cloudlight",this.cloudlight),t.setParamValue("cloudcover",this.cloudcover),t.setParamValue("cloudalpha",this.cloudalpha),t.setParamValue("clouddot",this.clouddot),t.setParamValue("skytint",this.skytint),t.setParamValue("time",this.time)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f(cc.Float)],t.prototype,"rotation",void 0),r([f(cc.Float)],t.prototype,"speed",void 0),r([f(cc.Float)],t.prototype,"cloudscale",void 0),r([f(cc.Float)],t.prototype,"clouddark",void 0),r([f(cc.Float)],t.prototype,"cloudlight",void 0),r([f(cc.Float)],t.prototype,"cloudcover",void 0),r([f(cc.Float)],t.prototype,"cloudalpha",void 0),r([f(cc.Float)],t.prototype,"clouddot",void 0),r([f(cc.Float)],t.prototype,"skytint",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderComponent:[function(e,t,n){"use strict";cc._RF.push(t,"d9dc0YRchJBcYljyDc/3kic","ShaderComponent");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("./ShaderManager"),i=cc._decorator,c=i.ccclass,s=i.property;i.playOnFocus,i.executeInEditMode;function l(e){var t=e.getRect(),n=e.getTexture();return{x:n.width/t.width,y:n.height/t.height,z:t.x/n.width,w:t.y/n.height}}(function(e){e[e.CLEAR_COLOR=0]="CLEAR_COLOR",e[e.R=1]="R",e[e.G=2]="G",e[e.B=3]="B",e[e.RG=4]="RG",e[e.RB=5]="RB",e[e.GB=6]="GB",e[e.RGB=7]="RGB"})(n.CLEAR_COLOR||(n.CLEAR_COLOR={})),n.getUVfix=l;var p=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.playOnStart=!0,t.applied=!1,t.shaderMaterial=null,t}return o(t,e),t.prototype.onDestroy=function(){var e=this.getRenderComponent();e instanceof cc.Sprite&&e.isValid&&e.setState(cc.Sprite.State.NORMAL)},t.prototype.onLoad=function(){this.getRenderComponent()||this.addComponent(cc.Sprite)},t.prototype.start=function(){var e=this;if(this.playOnStart&&this.applyShader(),this.doStart){var t=this.getRenderComponent();if(t instanceof cc.Sprite){this.scheduleOnce(function(){var n=l(t.spriteFrame);e.shaderMaterial.setParamValue("uvfix",n)},0)}this.doStart(this.getRenderComponent(),this.shaderMaterial)}},t.prototype.update=function(e){if(this.applied&&this.doUpdate){var t=this.getRenderComponent();this.doUpdate(t,t._material,e),this.updateMaterialCache(t,e)}},t.prototype.getRenderComponent=function(){return this.getComponent(cc.Sprite)||this.getComponent(sp.Skeleton)},t.prototype.updateMaterialCache=function(e,t){var n=e._materialCache;for(var o in n)if(n.hasOwnProperty(o)){var r=n[o];this.doUpdate(e,r,t)}},t.prototype.applyShader=function(){var e=this;if(this.createShader(),this.shaderFunc&&!this.applied&&this.shaderMaterial){this.applied=!0;var t,n=this.getRenderComponent();if(n instanceof cc.Sprite)t=n.spriteFrame.getTexture(),n._materials&&n._materials[this.shaderFunc.name]||n.setMaterials(this.shaderFunc.name,this.shaderMaterial),n._updateMaterial(this.shaderMaterial),n.activateMaterial(this.shaderFunc.name);else n instanceof sp.Skeleton&&(t=n.skeletonData.textures[0],this.shaderMaterial.texture!==t?(this.shaderMaterial.texture=t,n._updateMaterial(this.shaderMaterial)):this.shaderMaterial!==n._material&&n._updateMaterial(this.shaderMaterial));n.markForUpdateRenderData(!0),n.markForRender(!0),this.shaderFunc.params&&this.shaderFunc.params.forEach(function(t){void 0!==t.defaultValue&&e.shaderMaterial.setParamValue(t.name,t.defaultValue)})}},t.prototype.createShader=function(){var e=this.getRenderComponent();if(this.shaderFunc&&!this.shaderMaterial){var t=a.shaderManager.createShaderMaterial(e,this.shaderFunc);if(this.shaderMaterial=t,e.node&&(t.color=e.node.color),e instanceof cc.Sprite){var n=e.spriteFrame.getTexture();t.texture=n}else e instanceof sp.Skeleton&&(t.texture=e.skeletonData.textures[0])}},t.prototype.getMaterial=function(){return this.shaderMaterial},r([s(cc.Boolean)],t.prototype,"playOnStart",void 0),t=r([c],t)}(cc.Component);n.default=p,cc._RF.pop()},{"./ShaderManager":"ShaderManager"}],ShaderDemo:[function(e,t,n){"use strict";cc._RF.push(t,"2b6b2zygEFMipBmu8VOBa2B","ShaderDemo");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a,i=e("../submodule/shader/script/ShaderFunc"),c=e("./InputePropertys"),s=cc._decorator,l=s.ccclass,p=s.property;(function(e){e[e.Default=0]="Default",e[e.ShaderAclouisCircle=1]="ShaderAclouisCircle",e[e.ShaderBallOfFire=2]="ShaderBallOfFire",e[e.ShaderClouds=3]="ShaderClouds",e[e.ShaderDissolve2=4]="ShaderDissolve2",e[e.ShaderElectricGrid=5]="ShaderElectricGrid",e[e.ShaderExplosion=6]="ShaderExplosion",e[e.ShaderFire=7]="ShaderFire",e[e.ShaderFlame301Remix2=8]="ShaderFlame301Remix2",e[e.ShaderFlame301Remix3=9]="ShaderFlame301Remix3",e[e.ShaderFlameAvin=10]="ShaderFlameAvin",e[e.ShaderFlameBrady=11]="ShaderFlameBrady",e[e.ShaderFlameOzzy=12]="ShaderFlameOzzy",e[e.ShaderFlameWADE=13]="ShaderFlameWADE",e[e.ShaderFluxay=14]="ShaderFluxay",e[e.ShaderFluxay2=15]="ShaderFluxay2",e[e.ShaderGrassy=16]="ShaderGrassy",e[e.ShaderInterstellar=17]="ShaderInterstellar",e[e.ShaderRun=18]="ShaderRun",e[e.ShaderRun2=19]="ShaderRun2",e[e.ShaderRun3=20]="ShaderRun3",e[e.ShaderSearch=21]="ShaderSearch",e[e.ShaderSparks=22]="ShaderSparks",e[e.ShaderSparksDrifting=23]="ShaderSparksDrifting",e[e.ShaderSplash=24]="ShaderSplash",e[e.ShaderWater=25]="ShaderWater",e[e.ShaderWater2=26]="ShaderWater2",e[e.ShaderWave=27]="ShaderWave",e[e.ShaderGaussBlur=28]="ShaderGaussBlur"})(a=n.SHADER_LIST||(n.SHADER_LIST={}));var u={0:"Default",1:"ShaderAclouisCircle",2:"ShaderBallOfFire",3:"ShaderClouds",4:"ShaderDissolve2",5:"ShaderElectricGrid",6:"ShaderExplosion",7:"ShaderFire",8:"ShaderFlame301Remix2",9:"ShaderFlame301Remix3",10:"ShaderFlameAvin",11:"ShaderFlameBrady",12:"ShaderFlameOzzy",13:"ShaderFlameWADE",14:"ShaderFluxay",15:"ShaderFluxay2",16:"ShaderGrassy",17:"ShaderInterstellar",18:"ShaderRun",19:"ShaderRun2",20:"ShaderRun3",21:"ShaderSearch",22:"ShaderSparks",23:"ShaderSparksDrifting",24:"ShaderSplash",25:"ShaderWater",26:"ShaderWater2",27:"ShaderWave",28:"ShaderGaussBlur"},f=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.currentShader=a.Default,t.spriteParent=null,t.spriteTemplate=null,t.currentShaderComponent=null,t.tempButton=null,t.content=null,t.mainSpriteFrame=null,t.shaderNameLabel=null,t.textureMap=new Map,t.complete=0,t.mask=null,t.oldSpriteNode=null,t.propertyParent=null,t.params=[],t}return o(t,e),t.prototype.start=function(){var e=this;this.propertyParent.removeAllChildren(!1),this.spriteTemplate.removeFromParent(),cc.dynamicAtlasManager.enabled=!1,this.mask.active=!0,this.tempButton.node.removeFromParent();for(var t=function(t){var o=u[t];cc.loader.loadResDir(u[t],cc.SpriteFrame,function(n,o){var r=o.sort(function(e,t){return Number(e.name)-Number(t.name)});e.textureMap.set(u[t],r),e.complete+=1});var r=cc.instantiate(n.tempButton.node);r.getComponentInChildren(cc.Label).string=o;var a=r.getComponent(cc.Button);a.clickEvents=[];var i=new cc.Component.EventHandler;i.component="ShaderDemo",i.target=n.node,i.customEventData=t+"",i.handler="onChangeClick",a.clickEvents.push(i),r.setParent(n.content)},n=this,o=1;o<29;o+=1)t(o);this.changeShader(this.currentShader)},t.prototype.lateUpdate=function(){28===this.complete&&(this.mask.active=!1,this.complete+=1)},t.prototype.changeTexture=function(e){switch(e[0].type){case"image/png":case"image/jpg":case"image/jpeg":(n=new cc.Texture2D).initWithElement(e[0].result),n.name=e[0].name,this.mainSpriteFrame=new cc.SpriteFrame,this.mainSpriteFrame.name=e[0].name,this.mainSpriteFrame.setTexture(n)}var t;if(e[1])switch(e[1].type){case"image/png":case"image/jpg":case"image/jpeg":var n;(n=new cc.Texture2D).initWithElement(e[1].result),n.name=e[1].name,(t=new cc.SpriteFrame).name=e[1].name,t.setTexture(n)}this.changeShader(this.currentShader,[this.mainSpriteFrame,t])},t.prototype.onChangeClick=function(e,t){this.changeShader(Number(t))},t.prototype.changeShader=function(e,t){var n=this;if(0!==e){var o=this.oldSpriteNode;this.oldSpriteNode=null,o&&o.destroy();var r=cc.instantiate(this.spriteTemplate),a=r.getComponent(cc.Sprite);r.setParent(this.spriteParent),this.oldSpriteNode=r,this.currentShader=e;var i=u[e],c=this.textureMap.get(i)||[],s=t&&t.length&&t[0],l=t&&t.length&&t[1];this.mainSpriteFrame=s||c[0],a.spriteFrame=this.mainSpriteFrame,this.scheduleOnce(function(){if(r.isValid){if(n.currentShaderComponent=r.addComponent(i),n.shaderNameLabel.string=i||"","ShaderDissolve2"===i)n.currentShaderComponent.texture2=l||c[1];n.showProperty()}})}},t.prototype.showProperty=function(){var e=this;this.propertyParent.destroyAllChildren(),this.currentShaderComponent.getMaterial()?this.currentShaderComponent.shaderFunc.params.forEach(function(t){e.ignoreParam(t.name)||e.genProperty(t)}):this.scheduleOnce(this.showProperty)},t.prototype.ignoreParam=function(e){switch(e.toLowerCase()){case"time":case"itime":case"resolution":case"iresolution":case"uvfix":case"uvfix2":case"texture2":return!0;default:return!1}},t.prototype.genProperty=function(e){var t=this.currentShaderComponent.getMaterial(),n=t.getParamValue(e.name),o=null;switch(e.type){case i.RENDERER_PARAMS.PARAM_FLOAT:(o=cc.instantiate(this.params[0])).setParent(this.propertyParent),o.getComponent(c.default).setEditorActions(e.name,[n],[d(t,e.type,0)]);break;case i.RENDERER_PARAMS.PARAM_INT2:case i.RENDERER_PARAMS.PARAM_FLOAT2:(o=cc.instantiate(this.params[0])).setParent(this.propertyParent),o.getComponent(c.default).setEditorActions(e.name,[n.x,n.y],[d(t,e.type,0),d(t,e.type,1)]);break;case i.RENDERER_PARAMS.PARAM_INT3:case i.RENDERER_PARAMS.PARAM_FLOAT3:(o=cc.instantiate(this.params[0])).setParent(this.propertyParent),o.getComponent(c.default).setEditorActions(e.name,[n.x,n.y,n.z],[d(t,e.type,0),d(t,e.type,1),d(t,e.type,2)]);break;case i.RENDERER_PARAMS.PARAM_INT4:case i.RENDERER_PARAMS.PARAM_FLOAT4:(o=cc.instantiate(this.params[0])).setParent(this.propertyParent),o.getComponent(c.default).setEditorActions(e.name,[n.x,n.y,n.z,n.w],[d(t,e.type,0),d(t,e.type,1),d(t,e.type,2),d(t,e.type,3)]);break;case i.RENDERER_PARAMS.PARAM_INT:if("useTextureAlpha"===e.name||"isClockwise"===e.name||"xUseAbs"===e.name||"yUseAbs"===e.name||"xUseExp"===e.name||"yUseExp"===e.name||"reverse"===e.name||"useSymmetry"===e.name||"useRandomShape"===e.name||"useTextureColor"===e.name){(o=cc.instantiate(this.params[1])).setParent(this.propertyParent),o.getComponent(c.default).setToggleActions(e.name,[n],[d(t,e.type,0)]);break}(o=cc.instantiate(this.params[0])).setParent(this.propertyParent),o.getComponent(c.default).setEditorActions(e.name,[n],[d(t,e.type,0)])}},t.prototype.download=function(){var e=this,t=[],n=this.currentShaderComponent.getMaterial();this.currentShaderComponent.shaderFunc.params.forEach(function(o){if(!e.ignoreParam(o.name)){var r=n.getParamValue(o.name);t.push({name:o.name,value:r})}}),t.length&&v(t,u[this.currentShader])},r([p({type:cc.Enum(a)})],t.prototype,"currentShader",void 0),r([p(cc.Node)],t.prototype,"spriteParent",void 0),r([p(cc.Node)],t.prototype,"spriteTemplate",void 0),r([p(cc.Button)],t.prototype,"tempButton",void 0),r([p(cc.Node)],t.prototype,"content",void 0),r([p(cc.SpriteFrame)],t.prototype,"mainSpriteFrame",void 0),r([p(cc.Label)],t.prototype,"shaderNameLabel",void 0),r([p(cc.Node)],t.prototype,"mask",void 0),r([p(cc.Node)],t.prototype,"propertyParent",void 0),r([p([cc.Node])],t.prototype,"params",void 0),t=r([l],t)}(cc.Component);function d(e,t,n){return function(o,r){var a=Number(r);if(!isNaN(a)){var i=e.getParamValue(o);switch(t+"_"+n){case"0_0":case"4_0":e.setParamValue(o,a);break;case"1_0":case"5_0":e.setParamValue(o,cc.v2(a,i.y));break;case"1_0":case"5_1":e.setParamValue(o,cc.v2(i.x,a));break;case"2_0":case"6_0":e.setParamValue(o,new cc.Vec3(a,i.y,i.z));break;case"2_1":case"6_1":e.setParamValue(o,new cc.Vec3(i.x,a,i.z));break;case"2_2":case"6_2":e.setParamValue(o,new cc.Vec3(i.x,i.y,a));break;case"3_0":case"7_0":e.setParamValue(o,{x:a,y:i.y,z:i.z,w:i.w});break;case"3_1":case"7_1":e.setParamValue(o,{x:i.x,y:a,z:i.z,w:i.w});break;case"3_2":case"7_2":e.setParamValue(o,{x:i.x,y:i.y,z:a,w:i.w});break;case"3_3":case"7_3":e.setParamValue(o,{x:i.x,y:i.y,z:i.z,w:a})}}}}function v(e,t){var n="data:text/json;charset=utf-8,"+encodeURIComponent(JSON.stringify(e)),o=document.createElement("a");o.setAttribute("href",n),o.setAttribute("download",t+".json"),document.body.appendChild(o),o.click(),o.remove()}n.default=f,cc._RF.pop()},{"../submodule/shader/script/ShaderFunc":"ShaderFunc","./InputePropertys":"InputePropertys"}],ShaderDissolve2:[function(e,t,n){"use strict";cc._RF.push(t,"022cfU+M7hFy5R+FLEVjAdM","ShaderDissolve2");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderDissolve2",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"uvfix2",type:c.RENDERER_PARAMS.PARAM_FLOAT4},{name:"texture2",type:c.RENDERER_PARAMS.PARAM_TEXTURE_2D}],vert:a.MVP,frag:"\n    uniform sampler2D texture;\n    uniform sampler2D texture2;\n    uniform vec4 uvfix;\n    uniform vec4 uvfix2;\n    uniform vec4 color;\n    uniform float time;\n    varying vec2 v_uv0;\n\n    void main()\n    {\n        // float h = (c.g + c.b)/2.;\n\n        vec2 uv1 = (v_uv0 - uvfix.zw) * uvfix.xy;\n        vec2 uv2 = uv1 / uvfix2.xy + uvfix2.zw;\n\n        vec4 t = texture2D(texture2, uv2);\n        float h = (t.r + t.g + t.b) / 3.;\n\n        vec4 c = texture2D(texture, v_uv0);\n        if(h < time || c.a <= 0.1)\n        {\n            discard;\n        }\n        if(h-0.06 < time)\n        {\n            c = vec4(1.0, c.gb, abs(h-time)/0.06) ;\n        }\n        if(h-0.02 < time)\n        {\n            c = vec4(1, 0, 0,abs(h-time)/0.02 );\n        }\n        if(h-0.01 < time)\n        {\n            c = vec4(0, 0, 0,abs(h-time)/0.01 );\n        }\n        gl_FragColor = c;\n    }"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.flag=!1,t.speed=.5,t.texture2=null,t}return o(t,e),t.prototype.doStart=function(e,t,n){var o=this;this.time=0;var r=this.texture2.getTexture();t.setParamValue("time",this.time),t.setParamValue("texture2",r.getImpl());this.scheduleOnce(function(){var e=i.getUVfix(o.texture2);t.setParamValue("uvfix2",e)},0)},t.prototype.doUpdate=function(e,t,n){n*=this.speed,this.flag?this.time+=n:this.time-=n,this.time>=1.2?this.flag=!1:this.time<=-.2&&(this.flag=!0),t.setParamValue("time",this.time)},r([f({type:cc.Float,tooltip:"\u8d8a\u5c0f\u8d8a\u6162"})],t.prototype,"speed",void 0),r([f({type:cc.SpriteFrame,tooltip:"cc.Sprite \u4e0a\u7684\u7d20\u6750\u61c9\u7528 trim"})],t.prototype,"texture2",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderElectricGrid:[function(e,t,n){"use strict";cc._RF.push(t,"34ff5oaX8tDaLJXI5U71mvl","ShaderElectricGrid");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderElectricGrid",params:[{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"detal",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"glowColor",type:c.RENDERER_PARAMS.PARAM_FLOAT4},{name:"clearColor",type:c.RENDERER_PARAMS.PARAM_INT},{name:"useTextureAlpha",type:c.RENDERER_PARAMS.PARAM_INT}],vert:a.MVP,frag:"\n        uniform sampler2D texture;\n        uniform vec4 uvfix;\n        uniform vec2 resolution;\n        uniform float time;\n        uniform float speed;\n        uniform float detal;\n        uniform vec4 glowColor;\n        uniform int clearColor;\n        uniform int useTextureAlpha;\n        varying vec2 v_uv0;\n\n        vec2 bigger(in vec2 uv){\n            return (uvfix.xy - uvfix.zw) * uv;\n        }\n\n        vec2 rand2(in vec2 p)\n        {\n            return fract(vec2(sin(p.x * 591.32 + p.y * 154.077), cos(p.x * 391.32 + p.y * 49.077)));\n        }\n\n        float voronoi(in vec2 x)\n        {\n            vec2 p = floor(x);\n            vec2 f = fract(x);\n            float minDistance = 1.;\n\n            for(int j = -1; j <= 1; j ++)\n            {\n                for(int i = -1; i <= 1; i ++)\n                {\n                    vec2 b = vec2(i, j);\n                    vec2 rand = .5 + .5 * sin(time*speed * 3. + 12. * rand2(p + b));\n                    vec2 r = vec2(b) - f + rand;\n                    minDistance = min(minDistance, length(r));\n                }\n            }\n            return minDistance;\n        }\n\n        void main()\n        {\n\n            vec2 uv = bigger(v_uv0);\n            uv.y = 2. - uv.y;\n            float val = pow(voronoi(uv * 8.) * 1.25, 7.) * 2.;\n            float gridLineThickness = detal / uv.y;\n            vec2 grid = step(mod(uv, .1), vec2(gridLineThickness));\n\n            vec4 tempColor = glowColor*vec4(val * (grid.x + grid.y),val * (grid.x + grid.y),val * (grid.x + grid.y),1.0);\n            float alpha = 0.;\n            if(clearColor == 1){\n                alpha = tempColor.r;\n            } else if(clearColor == 2){\n                alpha = tempColor.g;\n            } else if(clearColor == 3){\n                alpha = tempColor.b;\n            } else if(clearColor == 4){\n                alpha = tempColor.r*tempColor.g;\n            } else if(clearColor == 5){\n                alpha = tempColor.r*tempColor.b;\n            } else if(clearColor == 6){\n                alpha = tempColor.g*tempColor.b;\n            } else if(clearColor == 7){\n                alpha = tempColor.r*tempColor.g*tempColor.b;\n            }\n            vec4 t = texture2D(texture, v_uv0);\n            if(useTextureAlpha == 1){\n                gl_FragColor = vec4(tempColor.rgb,alpha*t.a);\n            } else {\n                gl_FragColor = vec4(tempColor.rgb,alpha);\n            }\n\n        }\n        "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=.5,t.detal=.003,t.color=cc.color(255,102,38.25,1),t.clearColor=1,t.useTextureAlpha=!0,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=e.node.getContentSize();t.setParamValue("resolution",o),t.setParamValue("time",this.time),t.setParamValue("detal",this.detal),t.setParamValue("speed",this.speed),t.setParamValue("glowColor",{x:this.color.getR()/255,y:this.color.getG()/255,z:this.color.getB()/255,w:this.color.getA()/255}),t.setParamValue("clearColor",this.clearColor),t.setParamValue("useTextureAlpha",this.useTextureAlpha?1:0)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f({type:cc.Float,tooltip:"\u8d8a\u5c0f\u8d8a\u6162"})],t.prototype,"speed",void 0),r([f({type:cc.Float})],t.prototype,"detal",void 0),r([f(cc.Color)],t.prototype,"color",void 0),r([f({type:cc.Enum(i.CLEAR_COLOR)})],t.prototype,"clearColor",void 0),r([f(cc.Boolean)],t.prototype,"useTextureAlpha",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderExplosion:[function(e,t,n){"use strict";cc._RF.push(t,"c9ba0kX7LNGm504ELvZkj1L","ShaderExplosion");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderExplosion",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"glowColor",type:c.RENDERER_PARAMS.PARAM_FLOAT4},{name:"clearColor",type:c.RENDERER_PARAMS.PARAM_INT},{name:"size",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"ring",type:c.RENDERER_PARAMS.PARAM_FLOAT}],vert:a.MVP,frag:"\n        varying vec2 v_uv0;\n        uniform vec4 uvfix;\n        uniform vec2 resolution;\n        uniform float time;\n        uniform float speed;\n        uniform vec4 glowColor;\n        uniform int clearColor;\n        uniform float size;\n        uniform float ring;\n\n        vec2 bigger(in vec2 uv){\n            return (uvfix.xy - uvfix.zw) * uv;\n        }\n\n        const int layers = 128;\n        const float blur = .1;\n        const float speed2 = 4.;\n        const float peaks = 8.;\n        const float peakStrength = .1;\n        const float ringSpeed = 1.5;\n        const float smoke = .4;\n        const float smokeTime = 40.;\n\n        float hash(float seed){\n            return fract(sin(seed * 3602.64325) * 051.63891);\n        }\n\n        float circle(float radius, vec2 pos){\n            return radius - pos.x;\n        }\n\n        void main()\n        {\n            vec2 uv = bigger(v_uv0);\n            uv = uv * size - size/2.;\n            vec2 puv = vec2(length(uv),atan(uv.x,uv.y)); //polar coordinates\n\n            float iTime = time*speed;\n            iTime = mod(iTime,2.1);\n            vec3 col = vec3(0);\n            for(int i = 0; i < layers;i++){\n                float prog = float(i) / float(layers);\n                float radius = prog * ((1. - 1. / pow(iTime * speed2,1./3.)) * ring); //decrease radius using cubed\n                radius += sin(puv.y * peaks + hash(prog) * 513.) * peakStrength; //modulate radius so it isnt enitly symetrical\n                vec3 color = vec3(\n                    glowColor.r / radius,\n                    glowColor.g ,\n                    glowColor.b * (2. - radius)\n                )/ iTime / abs(log(iTime * ringSpeed) - puv.x); // base explosion color, decrease with time and with distance from center\n                color += vec3((1. - iTime / smokeTime) * puv.x * smoke);  //add smoke color, falloff can be controlled with smoketime variable\n                col += color * smoothstep(0.,1.,circle(radius,puv) / blur);\n            }\n\n            vec4 tempColor = vec4(col / float(layers),1.0);\n            float alpha = 0.;\n            if(clearColor == 1){\n                alpha = tempColor.r;\n            } else if(clearColor == 2){\n                alpha = tempColor.g;\n            } else if(clearColor == 3){\n                alpha = tempColor.b;\n            } else if(clearColor == 4){\n                alpha = tempColor.r*tempColor.g;\n            } else if(clearColor == 5){\n                alpha = tempColor.r*tempColor.b;\n            } else if(clearColor == 6){\n                alpha = tempColor.g*tempColor.b;\n            } else if(clearColor == 7){\n                alpha = tempColor.r*tempColor.g*tempColor.b;\n            }\n            gl_FragColor = vec4(tempColor.rgb,alpha);\n        }\n        "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=.5,t.color=cc.color(255,102,38.25),t.clearColor=1,t.size=4,t.ring=2,t.loop=!0,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=e.node.getContentSize();t.setParamValue("resolution",o),t.setParamValue("time",this.time),t.setParamValue("speed",this.speed),t.setParamValue("glowColor",{x:this.color.getR()/255,y:this.color.getG()/255,z:this.color.getB()/255,w:this.color.getA()/255}),t.setParamValue("clearColor",this.clearColor),t.setParamValue("size",this.size),t.setParamValue("ring",this.ring)},t.prototype.doUpdate=function(e,t,n){this.time+=n,this.loop&&t.setParamValue("time",this.time)},r([f({type:cc.Float,tooltip:"\u8d8a\u5c0f\u8d8a\u6162"})],t.prototype,"speed",void 0),r([f(cc.Color)],t.prototype,"color",void 0),r([f({type:cc.Enum(i.CLEAR_COLOR)})],t.prototype,"clearColor",void 0),r([f({type:cc.Float})],t.prototype,"size",void 0),r([f({type:cc.Float})],t.prototype,"ring",void 0),r([f(cc.Boolean)],t.prototype,"loop",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderFire:[function(e,t,n){"use strict";cc._RF.push(t,"ff1b2Ok8fVLEYEwOAoa9Y2W","ShaderFire");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderFire",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"glowColor",type:c.RENDERER_PARAMS.PARAM_FLOAT4},{name:"noise_sz",type:c.RENDERER_PARAMS.PARAM_FLOAT}],vert:a.MVP,frag:"\n        varying vec2 v_uv0;\n        uniform vec4 uvfix;\n        uniform vec2 resolution;\n        uniform float time;\n        uniform float speed;\n        uniform vec4 glowColor;\n        uniform float noise_sz;\n\n        vec2 bigger(in vec2 uv){\n            return (uvfix.xy - uvfix.zw) * uv;\n        }\n\n        // SNOISE function from: https://www.shadertoy.com/view/lsf3RH\n        float snoise(vec3 uv, float res)\n        {\n            const vec3 s = vec3(1e0, 1e2, 1e3);\n\n            uv *= res;\n\n            vec3 uv0 = floor(mod(uv, res))*s;\n            vec3 uv1 = floor(mod(uv+vec3(1.), res))*s;\n\n            vec3 f = fract(uv); f = f*f*(3.0-2.0*f);\n\n            vec4 v = vec4(uv0.x+uv0.y+uv0.z, uv1.x+uv0.y+uv0.z,\n                        uv0.x+uv1.y+uv0.z, uv1.x+uv1.y+uv0.z);\n\n            vec4 r = fract(sin(v*1e-1)*1e3);\n            float r0 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\n            r = fract(sin((v + uv1.z - uv0.z)*1e-1)*1e3);\n            float r1 = mix(mix(r.x, r.y, f.x), mix(r.z, r.w, f.x), f.y);\n\n            return mix(r0, r1, f.z)*2.-1.;\n        }\n\n        float noise(vec2 uv, float baseres)\n        {\n            float n = 0.0;\n            for (int i = 0; i < 7; i++)\n            {\n                float v = pow(2.0, float(i));\n                n += (1.5 / v) * snoise(vec3(uv + vec2(1.,1.) * (float(i) / 17.), 1), v * baseres);\n            }\n\n\n            return clamp((1.0 - n) * .5, 0., 1.);\n        }\n\n        void main()\n        {\n            vec2 uv = bigger(v_uv0);\n            uv.y = 1. - uv.y;\n\n            vec2 tiling = vec2(1.0, .6);\n            vec2 speed1 = vec2(0.05, -0.32);\n            vec2 speed2 = vec2(-0.10, -0.39);\n            float ss_min = 0.2;\n            float ss_max = ss_min + 0.5;\n\n            // Tiled UV\n            vec2 tuv = vec2(mod(uv.x * tiling.x, 1.0), mod(uv.y * tiling.y, 1.0));\n\n            // Samplings\n            vec2 uv1 = tuv + (speed1 * time*speed);\n            vec2 uv2 = tuv + (speed2 * time*speed);\n\n            // Mask\n            vec2 uvt = vec2(uv.x, pow(1.0 - uv.y, 2.2));\n            vec2 nuvt = (uvt * 2.0) - 1.0;\n            float v = 1. - length(nuvt);\n            v = ((v * .6) + (pow(v, 4.3) * 4.55));\n\n            float samplings = noise(uv1, noise_sz) * noise(uv2, noise_sz);\n            float mask = pow(v, 1.2) * samplings;\n            float amask = smoothstep(ss_min, ss_max, mask);\n\n            // Output to screen\n            gl_FragColor = glowColor + (glowColor * pow((1.0 - uv.y), 3.0) * .3);\n            gl_FragColor += samplings * .3;\n            gl_FragColor *= (2. * amask);\n        }\n        "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=.5,t.noise=8,t.color=cc.color(255,102,38.25),t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=e.node.getContentSize();t.setParamValue("resolution",o),t.setParamValue("time",this.time),t.setParamValue("speed",this.speed),t.setParamValue("glowColor",{x:this.color.getR()/255,y:this.color.getG()/255,z:this.color.getB()/255,w:this.color.getA()/255}),t.setParamValue("noise_sz",this.noise)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f({type:cc.Float,tooltip:"\u8d8a\u5c0f\u8d8a\u6162"})],t.prototype,"speed",void 0),r([f({type:cc.Float})],t.prototype,"noise",void 0),r([f(cc.Color)],t.prototype,"color",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderFlame301Remix2:[function(e,t,n){"use strict";cc._RF.push(t,"955767hpO1AwYNzQZMBwKN/","ShaderFlame301Remix2");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderFlame301Remix2",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2}],vert:a.MVP,frag:"\n\t#ifdef GL_ES\n\tprecision mediump float;\n\t#endif\n\n\tuniform sampler2D texture;\n    uniform float time;\n    uniform float speed;\n    uniform vec2 resolution;\n\tuniform vec4 uvfix;\n\n\tvarying vec2 v_uv0;\n\n\tvec2 bigger(in vec2 uv){\n\t\treturn uvfix.xy * uv + uvfix.zw;\n\t}\n\n\tvec2 smaller(in vec2 uv){\n\t\treturn (uv - uvfix.zw) / uvfix.xy;\n\t}\n\n\tvec3 rgb2hsv(vec3 c)\n    {\n        vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\n        vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));\n        vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));\n\n        float d = q.x - min(q.w, q.y);\n        float e = 1.0e-10;\n        return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);\n    }\n\n    vec3 hsv2rgb(vec3 c)\n    {\n        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n    }\n\n    float rand(vec2 n) {\n        return fract(sin(cos(dot(n, vec2(12.9898,12.1414)))) * 83758.5453);\n    }\n\n    float noise(vec2 n) {\n        const vec2 d = vec2(0.0, 1.0);\n        vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n        return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n    }\n\n    float fbm(vec2 n) {\n        float total = 0.0, amplitude = 1.0;\n        for (int i = 0; i <5; i++) {\n            total += noise(n) * amplitude;\n            n += n*1.7;\n            amplitude *= 0.47;\n        }\n        return total;\n    }\n\n    void main(void) {\n\n        const vec3 c1 = vec3(0.5, 0.0, 0.1);\n        const vec3 c2 = vec3(0.9, 0.1, 0.0);\n        const vec3 c3 = vec3(0.2, 0.1, 0.7);\n        const vec3 c4 = vec3(1.0, 0.9, 0.1);\n        const vec3 c5 = vec3(0.1);\n        const vec3 c6 = vec3(0.9);\n        float itime = speed*time;\n        vec2 speed = vec2(1.2, 0.1);\n        float shift = 1.327+sin(itime*2.0)/2.4;\n        float alpha = 1.0;\n\n        //change the constant term for all kinds of cool distance versions,\n        //make plus/minus to switch between\n        //ground fire and fire rain!\n        float dist = 3.5-sin(itime*0.4)/1.89;\n\n        vec2 uv = v_uv0;\n        uv.y = 1. - uv.y;\n        vec2 fragCoord = uv * resolution;\n        vec2 p = fragCoord.xy * dist / resolution.xx;\n        p.x -= itime/1.1;\n        float q = fbm(p - itime * 0.01+1.0*sin(itime)/10.0);\n        float qb = fbm(p - itime * 0.002+0.1*cos(itime)/5.0);\n        float q2 = fbm(p - itime * 0.44 - 5.0*cos(itime)/7.0) - 6.0;\n        float q3 = fbm(p - itime * 0.9 - 10.0*cos(itime)/30.0)-4.0;\n        float q4 = fbm(p - itime * 2.0 - 20.0*sin(itime)/20.0)+2.0;\n        q = (q + qb - .4 * q2 -2.0*q3  + .6*q4)/3.8;\n        vec2 r = vec2(fbm(p + q /2.0 + itime * speed.x - p.x - p.y), fbm(p + q - itime * speed.y));\n        vec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n        vec3 color = vec3(c * cos(shift * fragCoord.y / resolution.y));\n        color += .05;\n        color.r *= .8;\n        vec3 hsv = rgb2hsv(color);\n        hsv.y *= hsv.z  * 1.1;\n        hsv.z *= hsv.y * 1.13;\n        hsv.y = (2.2-hsv.z*.9)*1.20;\n        color = hsv2rgb(hsv);\n        alpha = color.r;\n        gl_FragColor = vec4(color.x, color.y, color.z, alpha);\n    }\n\t"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=(p.property,function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=1,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=new cc.Vec2(e.node.width,e.node.height);t.setParamValue("resolution",o),t.setParamValue("speed",this.speed),t.setParamValue("time",0)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},t=r([u],t)}(i.default));n.default=f,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderFlame301Remix3:[function(e,t,n){"use strict";cc._RF.push(t,"e3366awO2pKxYP4h/FIHYe1","ShaderFlame301Remix3");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderFlame301Remix3",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2}],vert:a.MVP,frag:"\n\t#ifdef GL_ES\n\tprecision mediump float;\n\t#endif\n\n\tuniform sampler2D texture;\n    uniform float time;\n    uniform float speed;\n    uniform vec2 resolution;\n\tuniform vec4 uvfix;\n\n\tvarying vec2 v_uv0;\n\n\tvec2 bigger(in vec2 uv){\n\t\treturn uvfix.xy * uv + uvfix.zw;\n\t}\n\n\tvec2 smaller(in vec2 uv){\n\t\treturn (uv - uvfix.zw) / uvfix.xy;\n\t}\n\n\t// I started working a bit on the colors of Remix 2, ended up with something like this. :)\n    // Remix 2 here: https://www.shadertoy.com/view/MtcGD7\n    // Remix 1 here: https://www.shadertoy.com/view/llc3DM\n    // Original here: https://www.shadertoy.com/view/XsXXRN\n\n    float rand(vec2 n) {\n        return fract(sin(cos(dot(n, vec2(12.9898,12.1414)))) * 83758.5453);\n    }\n\n    float noise(vec2 n) {\n        const vec2 d = vec2(0.0, 1.0);\n        vec2 b = floor(n), f = smoothstep(vec2(0.0), vec2(1.0), fract(n));\n        return mix(mix(rand(b), rand(b + d.yx), f.x), mix(rand(b + d.xy), rand(b + d.yy), f.x), f.y);\n    }\n\n    float fbm(vec2 n) {\n        float total = 0.0, amplitude = 1.0;\n        for (int i = 0; i <5; i++) {\n            total += noise(n) * amplitude;\n            n += n*1.7;\n            amplitude *= 0.47;\n        }\n        return total;\n    }\n\n    void main(void) {\n\n        const vec3 c1 = vec3(0.5, 0.0, 0.1);\n        const vec3 c2 = vec3(0.9, 0.1, 0.0);\n        const vec3 c3 = vec3(0.2, 0.1, 0.7);\n        const vec3 c4 = vec3(1.0, 0.9, 0.1);\n        const vec3 c5 = vec3(0.1);\n        const vec3 c6 = vec3(0.9);\n        float itime = time*speed;\n        vec2 speed2 = vec2(0.1, 0.9);\n        float shift = 1.327+sin(itime*2.0)/2.4;\n        float alpha = 1.0;\n\n        float dist = 3.5-sin(itime*0.4)/1.89;\n\n        vec2 uv = v_uv0;\n        uv.y = 1. - uv.y;\n        vec2 fragCoord = uv * resolution;\n        vec2 p = fragCoord.xy * dist / resolution.xx;\n        p += sin(p.yx*4.0+vec2(.2,-.3)*itime)*0.04;\n        p += sin(p.yx*8.0+vec2(.6,+.1)*itime)*0.01;\n\n        p.x -= itime/1.1;\n        float q = fbm(p - itime * 0.3+1.0*sin(itime+0.5)/2.0);\n        float qb = fbm(p - itime * 0.4+0.1*cos(itime)/2.0);\n        float q2 = fbm(p - itime * 0.44 - 5.0*cos(itime)/2.0) - 6.0;\n        float q3 = fbm(p - itime * 0.9 - 10.0*cos(itime)/15.0)-4.0;\n        float q4 = fbm(p - itime * 1.4 - 20.0*sin(itime)/14.0)+2.0;\n        q = (q + qb - .4 * q2 -2.0*q3  + .6*q4)/3.8;\n        vec2 r = vec2(fbm(p + q /2.0 + itime * speed2.x - p.x - p.y), fbm(p + q - itime * speed2.y));\n        vec3 c = mix(c1, c2, fbm(p + r)) + mix(c3, c4, r.x) - mix(c5, c6, r.y);\n        vec3 color = vec3(1.0/(pow(c+1.61,vec3(4.0))) * cos(shift * fragCoord.y / resolution.y));\n\n        color=vec3(1.0,.2,.05)/(pow((r.y+r.y)* max(.0,p.y)+0.1, 4.0));\n        alpha = color.r;\n        color = color/(1.0+max(vec3(0),color));\n        gl_FragColor = vec4(color.x, color.y, color.z, alpha);\n    }\n\t"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.speed=1,t.time=0,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=new cc.Vec2(e.node.width,e.node.height);t.setParamValue("resolution",o),t.setParamValue("time",0),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f(cc.Float)],t.prototype,"speed",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderFlameAvin:[function(e,t,n){"use strict";cc._RF.push(t,"cf833c+g7VMyJwZ7cmZWAO8","ShaderFlameAvin");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderFlameAvin",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT}],vert:a.MVP,frag:"\n\t#ifdef GL_ES\n\tprecision mediump float;\n\t#endif\n\n\tuniform sampler2D texture;\n\tuniform float time;\n\tuniform float speed;\n\tuniform vec4 uvfix;\n\n\tvarying vec2 v_uv0;\n\n\tvec2 bigger(in vec2 uv){\n\t\treturn (uvfix.xy - uvfix.zw) * uv ;\n\t}\n\n\tvec2 smaller(in vec2 uv){\n\t\treturn uv/uvfix.xy + uvfix.zw;\n\t}\n\n\t// Simplex noise from https://www.shadertoy.com/view/4sdGD8\n\tlowp vec3 permute(in lowp vec3 x) { return mod( x*x*34.+x, 289.); }\n\tlowp float snoise(in lowp vec2 v)\n\t{\n\t\tlowp vec2 i = floor((v.x+v.y)*.36602540378443 + v),\n\t\t\tx0 = (i.x+i.y)*.211324865405187 + v - i;\n\t\tlowp float s = step(x0.x,x0.y);\n\t\tlowp vec2 j = vec2(1.0-s,s),\n\t\t\tx1 = x0 - j + .211324865405187,\n\t\t\tx3 = x0 - .577350269189626;\n\t\ti = mod(i,289.);\n\t\tlowp vec3 p = permute( permute( i.y + vec3(0, j.y, 1 ))+ i.x + vec3(0, j.x, 1 )   ),\n\t\t\tm = max( .5 - vec3(dot(x0,x0), dot(x1,x1), dot(x3,x3)), 0.),\n\t\t\tx = fract(p * .024390243902439) * 2. - 1.,\n\t\t\th = abs(x) - .5,\n\t\t\ta0 = x - floor(x + .5);\n\t\treturn .5 + 65. * dot( pow(m,vec3(4.))*(- 0.85373472095314*( a0*a0 + h*h )+1.79284291400159 ), a0 * vec3(x0.x,x1.x,x3.x) + h * vec3(x0.y,x1.y,x3.y));\n\t}\n\n\tvoid main()\n\t{\n\t\tvec2 uv = bigger(v_uv0);\n\t\tuv.y = 1.0 - uv.y;\n\n\t\tvec2 nuv = uv;\n\t\tnuv.y -= time*speed*.30;\n\t\tnuv.y = nuv.y*.75; // little narrow\n\n\t\tfloat a = snoise(nuv*10.);\n\t\ta+=snoise(nuv*20.)*.5;\n\t\ta+=snoise(nuv*30.)*.25;\n\t\ta+=snoise(nuv*40.)*.15;\n\t\ta+=snoise(nuv*50.)*.05;\n\t\ta+=snoise(nuv*60.)*.025;\n\n\t\tvec3 col = vec3(0.85, 0.1, 0.);\n\n\t\tfloat rs = a*uv.y*5.;\n\n\t\t// Red+yellow\n\t\tcol.rg += rs;\n\t\tcol *= 1.25;\n\n\t\t// Black\n\t\t// col *= smoothstep(.85, .80, rs) * smoothstep(.9, .85, rs);\n\n\t\t// White\n\t\tcol += smoothstep(.65, 1., rs);\n\n\t\t// Output to screen\n\t\tgl_FragColor = vec4(col, 1.0-col.b);\n\t}\n\t"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.speed=1,t.time=0,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0,t.setParamValue("time",0),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f(cc.Float)],t.prototype,"speed",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderFlameBrady:[function(e,t,n){"use strict";cc._RF.push(t,"21cda6EPONGdppkQHBUm4+n","ShaderFlameBrady");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderFlameBrady",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"mouse",type:c.RENDERER_PARAMS.PARAM_FLOAT2}],vert:a.MVP,frag:"\n\t#ifdef GL_ES\n\tprecision mediump float;\n\t#endif\n\n\t#define STEPS 30.  // increase to smooth\n\n\tuniform sampler2D texture;\n\tuniform float time;\n\tuniform float speed;\n\tuniform vec2 resolution;\n\tuniform vec4 uvfix;\n\tuniform vec2 mouse;\n\n\tvarying vec2 v_uv0;\n\n\tvec2 bigger(in vec2 uv){\n\t\treturn (uvfix.xy - uvfix.zw) * uv ;\n\t}\n\n\tvec2 smaller(in vec2 uv){\n\t\treturn uv/uvfix.xy + uvfix.zw;\n\t}\n\n\t/////////////////////////////\n\t// BRADY'S VOLUMETRIC FIRE //\n\t/////////////////////////////\n\n\t// CREDITS\n\t// Thanks to @shnitzelkiller & @iq for inspiration and help\n\t// noise: https://github.com/BrianSharpe/Wombat/blob/master/Value3D.glsl\n\t// saturation: https://github.com/AnalyticalGraphicsInc/cesium/blob/master/Source/Shaders/Builtin/Functions/saturation.glsl\n\t// fnoise: https://www.shadertoy.com/view/Xsd3R2\n\n\tfloat noise( vec3 P )\n\t{\n\t\tvec3 Pi = floor(P);\n\t\tvec3 Pf = P - Pi;\n\t\tvec3 Pf_min1 = Pf - 1.0;\n\t\tPi.xyz = Pi.xyz - floor(Pi.xyz * ( 1.0 / 69.0 )) * 69.0;\n\t\tvec3 Pi_inc1 = step( Pi, vec3( 69.0 - 1.5 ) ) * ( Pi + 1.0 );\n\t\tvec4 Pt = vec4( Pi.xy, Pi_inc1.xy ) + vec2( 50.0, 161.0 ).xyxy;\n\t\tPt *= Pt;\n\t\tPt = Pt.xzxz * Pt.yyww;\n\t\tvec2 hash_mod = vec2( 1.0 / ( 635.298681 + vec2( Pi.z, Pi_inc1.z ) * 48.500388 ) );\n\t\tvec4 hash_lowz = fract( Pt * hash_mod.xxxx );\n\t\tvec4 hash_highz = fract( Pt * hash_mod.yyyy );\n\t\tvec3 blend = Pf * Pf * Pf * (Pf * (Pf * 6.0 - 15.0) + 10.0);\n\t\tvec4 res0 = mix( hash_lowz, hash_highz, blend.z );\n\t\tvec4 blend2 = vec4( blend.xy, vec2( 1.0 - blend.xy ) );\n\t\treturn dot( res0, blend2.zxzx * blend2.wwyy );\n\t}\n\n\tfloat fnoise(vec3 p, float t)\n\t{\n\t\tfloat f = 0.0;\n\t\tp = p - vec3(0.0, 1.0, 0.0) * .5 * t;\n\t\tp = p * 3.0;\n\t\tf += 0.50000 * noise(p); p = 2.0 * p;\n\t\tf += 0.25000 * noise(p); p = 2.0 * p;\n\t\tf += 0.12500 * noise(p); p = 2.0 * p;\n\t\tf += 0.06250 * noise(p); p = 2.0 * p;\n\t\tf += 0.03125 * noise(p);\n\t\treturn f;\n\t}\n\n\tfloat model( in vec3 p )\n\t{\n\t\tp.y *= .7;\n\t\tfloat sphere = length(p)-.8;\n\t\tfloat res = sphere + fnoise(p*1.5, time*speed*3.)* .4;\n\t\treturn res*.8;\n\t}\n\n\tfloat raymarch(in vec3 ro, in vec3 rd)\n\t{\n\t\tfloat dist = 0.;\n\t\tfor(int i = 0; i < 30; i++)\n\t\t{\n\t\t\tfloat m = model(ro+rd*dist);\n\t\t\tdist += m;\n\n\t\t\tif(m < .01) return dist;\n\t\t\telse if(dist > 2.) break;\n\t\t}\n\t\treturn -1.;\n\t}\n\n\tvec3 hueShift( vec3 color, float hueAdjust ){\n\n\t\tconst vec3  kRGBToYPrime = vec3 (0.299, 0.587, 0.114);\n\t\tconst vec3  kRGBToI      = vec3 (0.596, -0.275, -0.321);\n\t\tconst vec3  kRGBToQ      = vec3 (0.212, -0.523, 0.311);\n\n\t\tconst vec3  kYIQToR     = vec3 (1.0, 0.956, 0.621);\n\t\tconst vec3  kYIQToG     = vec3 (1.0, -0.272, -0.647);\n\t\tconst vec3  kYIQToB     = vec3 (1.0, -1.107, 1.704);\n\n\t\tfloat   YPrime  = dot (color, kRGBToYPrime);\n\t\tfloat   I       = dot (color, kRGBToI);\n\t\tfloat   Q       = dot (color, kRGBToQ);\n\t\tfloat   hue     = atan (Q, I);\n\t\tfloat   chroma  = sqrt (I * I + Q * Q);\n\n\t\thue += hueAdjust;\n\n\t\tQ = chroma * sin (hue);\n\t\tI = chroma * cos (hue);\n\n\t\tvec3    yIQ   = vec3 (YPrime, I, Q);\n\n\t\treturn vec3( dot (yIQ, kYIQToR), dot (yIQ, kYIQToG), dot (yIQ, kYIQToB) );\n\n\t}\n\n\tvec3 saturation(vec3 rgb, float adjustment)\n\t{\n\t\tconst vec3 W = vec3(0.2125, 0.7154, 0.0721);\n\t\tvec3 intensity = vec3(dot(rgb, W));\n\t\treturn mix(intensity, rgb, adjustment);\n\t}\n\n\tvec3 background(in vec2 p)\n\t{\n\t\treturn vec3(0.,0.,0.);\n\t}\n\n\tvec3 volume(in vec3 p, in vec3 rd, in vec3 ld, in vec2 sp)\n\t{\n\t\tvec3 op = p;\n\t\tfloat trans = 1.0;\n\t\tfloat td = 0.0;\n\t\tfloat dif = 0.0;\n\t\tfloat emit = 0.0;\n\n\t\t// march\n\t\tfor(float i = 0.; i < STEPS; i++)\n\t\t{\n\t\t\tfloat m = model(p);\n\t\t\tp += rd*.03;\n\n\t\t\tfloat dens = 1.-smoothstep(0., .35, -m);\n\t\t\ttd += dens;\n\t\t\ttrans *= dens;\n\n\t\t\tif(td > 1.0 && dif <= 0.)\n\t\t\t{\n\t\t\t\ttd = 1.;\n\t\t\t\tdif = clamp(1. - model(p - .1*ld), 0., 1.);\n\t\t\t\temit = pow(smoothstep(-.3, 0., model(p)), 4.);\n\t\t\t}\n\t\t}\n\n\t\ttrans = (1.-pow(td/STEPS, 4.5));\n\t\ttrans = smoothstep(0., 1., trans);\n\t\tfloat emitmod = (emit*trans)*.8+.2;\n\n\t\t// light\n\t\tvec3 lin = vec3(.3, .2, .9);\n\t\tlin = hueShift(lin, 4.2 + -trans*.6 + dif*.5);\n\t\tlin *= emitmod;\n\n\t\t// bright/sat/contrast\n\t\tlin = saturation(lin, pow(trans, .5)*.4);\n\t\tlin *= 5.;\n\t\tlin -= vec3(.4);\n\n\t\treturn mix(background(sp), lin, pow(trans, 1.25));\n\t}\n\n\tvoid main()\n\t{\n\t\tvec2 uv = bigger(v_uv0);\n\t\tuv.y = 1.0 - uv.y;\n\t\tvec2 fragCoord = uv*resolution;\n\t\tvec2 p = (fragCoord.xy - .5*resolution.xy)/resolution.y;\n\n\t\tfloat rs = .5;\n\t\tvec3 ro = vec3(cos(mouse.x/100.), 1., sin(mouse.x/100.))*1.35;\n\t\tvec3 ta = vec3(0., 0.1, .0);\n\n\t\tvec3 w = normalize (ta-ro);\n\t\tvec3 u = normalize (cross (w, vec3(0., 1., 0.)));\n\t\tvec3 v = normalize (cross (u, w));\n\t\tmat3 mat = mat3(u, v, w);\n\t\tvec3 rd = normalize (mat*vec3(p.xy,1.));\n\n\t\tfloat dist = raymarch(ro, rd);\n\t\tvec3 ld = vec3(-1., 1., 0.);\n\t\tvec3 col = dist > 0. ? volume(ro+rd*dist, rd, ld, p) : background(p);\n\n\t\tgl_FragColor = vec4(col,col.r);\n\t}\n\t"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=1,t.mouse=cc.v2(0,0),t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=new cc.Vec2(e.node.width,e.node.height);t.setParamValue("resolution",o),t.setParamValue("mouse",this.mouse),t.setParamValue("time",0),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f(cc.Vec2)],t.prototype,"mouse",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderFlameOzzy:[function(e,t,n){"use strict";cc._RF.push(t,"cd1b7PYBA1LNaGnhbzhQqpZ","ShaderFlameOzzy");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderFlameOzzy",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2}],vert:a.MVP,frag:"\n\t#ifdef GL_ES\n\tprecision mediump float;\n\t#endif\n\n\tuniform sampler2D texture;\n    uniform float time;\n    uniform float speed;\n    uniform vec2 resolution;\n\tuniform vec4 uvfix;\n\n\tvarying vec2 v_uv0;\n\n\tvec2 bigger(in vec2 uv){\n\t\treturn uvfix.xy * uv + uvfix.zw;\n\t}\n\n\tvec2 smaller(in vec2 uv){\n\t\treturn (uv - uvfix.zw) / uvfix.xy;\n    }\n\n    #define ITERATIONS 12\n    #define SPEED 10.0\n    #define DISPLACEMENT 0.05\n    #define TIGHTNESS 10.0\n    #define YOFFSET 0.1\n    #define YSCALE 0.25\n    #define FLAMETONE vec3(50.0, 5.0, 1.0)\n\n    float shape(in vec2 pos) // a blob shape to distort\n    {\n        return clamp( sin(pos.x*3.1416) - pos.y+YOFFSET, 0.0, 1.0 );\n    }\n\n    float noise( in vec3 x ) // iq noise function\n    {\n        vec3 p = floor(x);\n        vec3 f = fract(x);\n        f = f*f*(3.0-2.0*f);\n        vec2 uv = p.xy + f.xy + vec2(37.0,17.0)*p.z + 0.5;\n        uv = mod(uv,resolution) / resolution;\n        vec2 rg = texture2D(texture, uv, 0.0).yx;\n        return mix( rg.x, rg.y, f.z ) * 2.0 - 1.0;\n    }\n\n    void main()\n    {\n        vec2 uv = v_uv0.xy;\n        uv.y = 1. - uv.y;\n\n        float nx = 0.0;\n        float ny = 0.0;\n        for (int i=1; i<ITERATIONS+1; i++)\n        {\n            float ii = pow(float(i), 2.0);\n            float ifrac = float(i)/float(ITERATIONS);\n            float t = time * speed;\n            float tx = t * ifrac;\n            float ty = t * ifrac * SPEED;\n            float tz = t * ifrac / ii;\n            float d = (1.0-ifrac) * DISPLACEMENT;\n            nx += noise(vec3(uv.x*ii-tx, uv.y*YSCALE*ii-ty, 0.0)) * d * 2.0;\n            ny += noise(vec3(uv.x*ii+tx, uv.y*YSCALE*ii-ty, tz)) * d;\n        }\n        float flame = shape( vec2(uv.x+nx, uv.y+ny) );\n        vec3 color = pow(flame, TIGHTNESS) * FLAMETONE;\n\n        // tonemapping\n        color = color / (1.0+color);\n        color = pow(color, vec3(1.0/2.2));\n        color = clamp(color, 0.0, 1.0);\n\n        gl_FragColor = vec4(color, color.r);\n    }\n\t"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=(p.property,function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=1,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=new cc.Vec2(e.node.width,e.node.height);t.setParamValue("resolution",o),t.setParamValue("time",0),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},t=r([u],t)}(i.default));n.default=f,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderFlameWADE:[function(e,t,n){"use strict";cc._RF.push(t,"c2c4bJxRKlIe4vGDbLbohtZ","ShaderFlameWADE");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderFlameWADE",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT}],vert:a.MVP,frag:"\n\t#ifdef GL_ES\n\tprecision mediump float;\n\t#endif\n\n\tuniform sampler2D texture;\n\tuniform float time;\n\tuniform float speed;\n\tuniform vec4 uvfix;\n\n\tvarying vec2 v_uv0;\n\n\tvec2 bigger(in vec2 uv){\n\t\treturn uvfix.xy * uv + uvfix.zw;\n\t}\n\n\tvec2 smaller(in vec2 uv){\n\t\treturn (uv - uvfix.zw) / uvfix.xy;\n\t}\n\n\tvoid main(){\n\t\tvec2 uv = bigger(v_uv0);\n\n\t\t// Generate noisy x value\n\t\tvec2 n0Uv = vec2(uv.x*1.4 + 0.01, fract(uv.y + time*speed*0.69));\n\t\tvec2 n1Uv = vec2(uv.x*0.5 - 0.033, fract(uv.y*2.0 + time*speed*0.12));\n\t\tvec2 n2Uv = vec2(uv.x*0.94 + 0.02, fract(uv.y*3.0 + time*speed*0.61));\n\t\tfloat n0 = (texture2D(texture, smaller(n0Uv)).w-0.5)*2.0;\n\t\tfloat n1 = (texture2D(texture, smaller(n1Uv)).w-0.5)*2.0;\n\t\tfloat n2 = (texture2D(texture, smaller(n2Uv)).w-0.5)*2.0;\n\t\tfloat noiseA = clamp(n0 + n1 + n2, -1.0, 1.0);\n\n\t\t// Generate noisy y value\n\t\tvec2 n0UvB = vec2(uv.x*0.7 - 0.01, fract(uv.y + time*speed*0.27));\n\t\tvec2 n1UvB = vec2(uv.x*0.45 + 0.033, fract(uv.y*1.9 + time*speed*0.61));\n\t\tvec2 n2UvB = vec2(uv.x*0.8 - 0.02, fract(uv.y*2.5 + time*speed*0.51));\n\t\tfloat n0B = (texture2D(texture, smaller(n0UvB)).w-0.5)*2.0;\n\t\tfloat n1B = (texture2D(texture, smaller(n1UvB)).w-0.5)*2.0;\n\t\tfloat n2B = (texture2D(texture, smaller(n2UvB)).w-0.5)*2.0;\n\t\tfloat noiseB = clamp(n0B + n1B + n2B, -1.0, 1.0);\n\n\t\tvec2 finalNoise = vec2(noiseA, noiseB);\n\t\tfloat perturb = (1.0 - uv.y) * 0.35 + 0.02;\n\t\tfinalNoise = (finalNoise * perturb) + uv - 0.02;\n\n\t\tvec4 color = texture2D(texture, smaller(finalNoise));\n\t\tcolor = vec4(color.x*2.0, color.y*0.9, (color.y/color.x)*0.2, 1.0);\n\t\tfinalNoise = clamp(finalNoise, 0.05, 1.0);\n\t\tcolor.w = texture2D(texture, smaller(finalNoise)).z * 2.0 * texture2D(texture, smaller(uv)).z;\n\t\tgl_FragColor = color;\n\t}\n\t"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=1,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0,t.setParamValue("time",0),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f(cc.Float)],t.prototype,"speed",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderFluxay2:[function(e,t,n){"use strict";cc._RF.push(t,"0feefjYMrZGpqPr1YhJB3fw","ShaderFluxay2");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderFluxay2",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT}],defines:[],vert:a.MVP,frag:"\n        #define TAU 6.12\n        #define MAX_ITER 10\n        #define useModel\n        #define use2DPos\n        precision highp float;\n\n\n        uniform sampler2D texture;\n        varying mediump vec2 v_uv0;\n\n        #ifdef alphaTest\n          uniform lowp float alphaThreshold;\n        #endif\n\n        varying lowp vec4 v_light;\n        #ifdef useTint\n          varying lowp vec4 v_dark;\n        #endif\n        uniform float bluramount;\n        uniform float time;\n        uniform float speed;\n\n        void main()\n        {\n            vec4 texColor = texture2D(texture, v_uv0);\n            vec4 finalColor;\n\n            #ifdef useTint\n              finalColor.a = v_light.a * texColor.a;\n              finalColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n            #else\n              finalColor = texColor * v_light;\n            #endif\n\n            #ifdef alphaTest\n              if (finalColor.a <= alphaThreshold)\n                discard;\n            #endif\n\n\n            float itime = time * speed * .5+5.;\n            // uv should be the 0-1 uv of texture...\n            vec2 uv = v_uv0.xy;\n\n            vec2 p = mod(uv*TAU, TAU)-250.0;\n\n            vec2 i = vec2(p);\n            float c = 1.0;\n            float inten = .0045;\n\n            for (int n = 0; n < MAX_ITER; n++)\n            {\n                float t =  itime * (1.0 - (3.5 / float(n+1)));\n                i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(1.5*t + i.x));\n                c += 1.0/length(vec2(p.x / (cos(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\n            }\n            c /= float(MAX_ITER);\n            c = 1.17-pow(c, 1.4);\n            vec4 tex = texture2D(texture,uv);\n            vec3 colour = vec3(pow(abs(c), 20.0));\n            colour = clamp(colour + vec3(0.0, 0.0, .0), 0.0, tex.a);\n\n            // \u6df7\u5408\u6ce2\u5149\n            float alpha = c*tex[3];\n            tex[0] = tex[0] + colour[0]*alpha;\n            tex[1] = tex[1] + colour[1]*alpha;\n            tex[2] = tex[2] + colour[2]*alpha;\n            gl_FragColor = finalColor*2.0 * tex;\n        }"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.speed=1,t.time=0,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0,t.setParamValue("time",this.time),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f(cc.Float)],t.prototype,"speed",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderFluxay:[function(e,t,n){"use strict";cc._RF.push(t,"14afam9PvhMELAW0eSTrQ8v","ShaderFluxay");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../ShaderComponent"),i=e("../ShaderFunc"),c=e("../ShaderManager"),s={name:"ShaderFluxay",params:[{name:"time",type:i.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"speed",type:i.RENDERER_PARAMS.PARAM_FLOAT}],defines:[],vert:"\n        #define useModel\n        #define use2DPos\n        precision highp float;\n\n\n        uniform mat4 viewProj;\n\n        #ifdef use2DPos\n        attribute vec2 a_position;\n        #else\n        attribute vec3 a_position;\n        #endif\n\n        attribute lowp vec4 a_color;\n        #ifdef useTint\n        attribute lowp vec4 a_color0;\n        #endif\n\n        #ifdef useModel\n        uniform mat4 model;\n        #endif\n\n        attribute mediump vec2 a_uv0;\n        varying mediump vec2 v_uv0;\n\n        varying lowp vec4 v_light;\n        #ifdef useTint\n        varying lowp vec4 v_dark;\n        #endif\n\n        void main () {\n            mat4 mvp;\n            #ifdef useModel\n              mvp = viewProj * model;\n            #else\n              mvp = viewProj;\n            #endif\n\n            #ifdef use2DPos\n            vec4 pos = mvp * vec4(a_position, 0, 1);\n            #else\n            vec4 pos = mvp * vec4(a_position, 1);\n            #endif\n\n            v_light = a_color;\n            #ifdef useTint\n              v_dark = a_color0;\n            #endif\n\n            v_uv0 = a_uv0;\n\n            gl_Position = pos;\n        }",frag:"\n        #define useModel\n        #define use2DPos\n        precision highp float;\n\n\n        uniform sampler2D texture;\n        varying mediump vec2 v_uv0;\n\n        #ifdef alphaTest\n          uniform lowp float alphaThreshold;\n        #endif\n\n        varying lowp vec4 v_light;\n        #ifdef useTint\n          varying lowp vec4 v_dark;\n        #endif\n        uniform float time;\n        uniform float speed;\n\n        void main()\n        {\n            vec4 texColor = texture2D(texture, v_uv0);\n            vec4 finalColor;\n\n            #ifdef useTint\n              finalColor.a = v_light.a * texColor.a;\n              finalColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n            #else\n              finalColor = texColor * v_light;\n            #endif\n\n            #ifdef alphaTest\n              if (finalColor.a <= alphaThreshold)\n                discard;\n            #endif\n\n            float width = 0.03;       //\u6d41\u5149\u7684\u5bbd\u5ea6\u8303\u56f4 (\u8c03\u6574\u8be5\u503c\u6539\u53d8\u6d41\u5149\u7684\u5bbd\u5ea6)\n            float start = tan(mod(time*speed,1.414)/1.414);  //\u6d41\u5149\u7684\u8d77\u59cbx\u5750\u6807\n            float strength = 0.05;   //\u6d41\u5149\u589e\u4eae\u5f3a\u5ea6   (\u8c03\u6574\u8be5\u503c\u6539\u53d8\u6d41\u5149\u7684\u589e\u4eae\u5f3a\u5ea6)\n            float offset = 0.5;      //\u504f\u79fb\u503c         (\u8c03\u6574\u8be5\u503c\u6539\u53d8\u6d41\u5149\u7684\u503e\u659c\u7a0b\u5ea6)\n            if(v_uv0.x < (start - offset * v_uv0.y) &&  v_uv0.x > (start - offset * v_uv0.y - width))\n            {\n                vec3 improve = strength * vec3(255, 255, 255);\n                vec3 result = improve * vec3( finalColor.r, finalColor.g, finalColor.b);\n                gl_FragColor = vec4(result, finalColor.a);\n\n            }else{\n                gl_FragColor = finalColor;\n            }\n        }"};c.shaderManager.addShader(s);var l=cc._decorator,p=l.ccclass,u=l.property,f=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=s,t.time=0,t.speed=1,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0,t.setParamValue("time",this.time),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([u(cc.Float)],t.prototype,"speed",void 0),t=r([p],t)}(a.default);n.default=f,cc._RF.pop()},{"../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderFunc:[function(e,t,n){"use strict";cc._RF.push(t,"848a1BHpgpIkJe62a3fGm9F","ShaderFunc"),Object.defineProperty(n,"__esModule",{value:!0}),function(e){e[e.PARAM_COLOR3=8]="PARAM_COLOR3",e[e.PARAM_COLOR4=9]="PARAM_COLOR4",e[e.PARAM_FLOAT=4]="PARAM_FLOAT",e[e.PARAM_FLOAT2=5]="PARAM_FLOAT2",e[e.PARAM_FLOAT3=6]="PARAM_FLOAT3",e[e.PARAM_FLOAT4=7]="PARAM_FLOAT4",e[e.PARAM_INT=0]="PARAM_INT",e[e.PARAM_INT2=1]="PARAM_INT2",e[e.PARAM_INT3=2]="PARAM_INT3",e[e.PARAM_INT4=3]="PARAM_INT4",e[e.PARAM_MAT2=10]="PARAM_MAT2",e[e.PARAM_MAT3=11]="PARAM_MAT3",e[e.PARAM_MAT4=12]="PARAM_MAT4",e[e.PARAM_TEXTURE_2D=13]="PARAM_TEXTURE_2D",e[e.PARAM_TEXTURE_CUBE=14]="PARAM_TEXTURE_CUBE"}(n.RENDERER_PARAMS||(n.RENDERER_PARAMS={}));var o=function(){return function(){}}();n.Param=o,cc._RF.pop()},{}],ShaderGaussBlur:[function(e,t,n){"use strict";cc._RF.push(t,"88028X6Tl9Pco5Bqj+QGVOG","ShaderGaussBlur");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../ShaderComponent"),i=e("../ShaderFunc"),c=e("../ShaderManager"),s={name:"ShaderGaussBlur",params:[{name:"bluramount",type:i.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:.005}],defines:[],vert:"\n        #define useModel\n        #define use2DPos\n        precision highp float;\n\n\n        uniform mat4 viewProj;\n\n        #ifdef use2DPos\n        attribute vec2 a_position;\n        #else\n        attribute vec3 a_position;\n        #endif\n\n        attribute lowp vec4 a_color;\n        #ifdef useTint\n        attribute lowp vec4 a_color0;\n        #endif\n\n        #ifdef useModel\n        uniform mat4 model;\n        #endif\n\n        attribute mediump vec2 a_uv0;\n        varying mediump vec2 uv0;\n\n        varying lowp vec4 v_light;\n        #ifdef useTint\n        varying lowp vec4 v_dark;\n        #endif\n\n        void main () {\n            mat4 mvp;\n            #ifdef useModel\n              mvp = viewProj * model;\n            #else\n              mvp = viewProj;\n            #endif\n\n            #ifdef use2DPos\n            vec4 pos = mvp * vec4(a_position, 0, 1);\n            #else\n            vec4 pos = mvp * vec4(a_position, 1);\n            #endif\n\n            v_light = a_color;\n            #ifdef useTint\n              v_dark = a_color0;\n            #endif\n\n            uv0 = a_uv0;\n\n            gl_Position = pos;\n        }",frag:"\n        #define useModel\n        #define use2DPos\n        precision highp float;\n\n\n        uniform sampler2D texture;\n        varying mediump vec2 uv0;\n\n        #ifdef alphaTest\n          uniform lowp float alphaThreshold;\n        #endif\n\n        varying lowp vec4 v_light;\n        #ifdef useTint\n          varying lowp vec4 v_dark;\n        #endif\n        uniform float bluramount;\n\n        vec4 draw(vec2 uv) {\n            return texture2D(texture, uv).rgba;\n        }\n\n        float grid(float var, float size) {\n            return floor(var*size)/size;\n        }\n\n        float rand(vec2 co){\n            return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n        }\n\n        void mainImage( out vec4 fragColor, in vec2 uv0 )\n        {\n            vec2 uv = uv0.xy;\n            vec4 blurred_image = vec4(0.);\n            #define repeats 5.\n            for (float i = 0.; i < repeats; i++) {\n                vec2 q = vec2(cos(degrees((i/repeats)*360.)),sin(degrees((i/repeats)*360.))) * (rand(vec2(i,uv.x+uv.y))+bluramount);\n                vec2 uv2 = uv+(q*bluramount);\n                blurred_image += draw(uv2)/2.;\n                q = vec2(cos(degrees((i/repeats)*360.)),sin(degrees((i/repeats)*360.))) * (rand(vec2(i+2.,uv.x+uv.y+24.))+bluramount);\n                uv2 = uv+(q*bluramount);\n                blurred_image += draw(uv2)/2.;\n            }\n            blurred_image /= repeats;\n            fragColor = vec4(blurred_image);\n        }\n\n        void main()\n        {\n            mainImage(gl_FragColor, uv0.xy);\n        }"};c.shaderManager.addShader(s);var l=cc._decorator,p=l.ccclass,u=l.property,f=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=s,t.amount=.005,t}return o(t,e),t.prototype.doStart=function(e,t,n){t.setParamValue("bluramount",this.amount)},t.prototype.doUpdate=function(e,t,n){},r([u(cc.Float)],t.prototype,"amount",void 0),t=r([p],t)}(a.default);n.default=f,cc._RF.pop()},{"../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderGrassy:[function(e,t,n){"use strict";cc._RF.push(t,"430f09giP1FQI3e8uSPgh+y","ShaderGrassy");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderGrassy",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2}],defines:[],vert:a.MVP,frag:"\n    #ifdef GL_ES\nprecision mediump float;\n#endif\n\n#define BLADES 50\nuniform float time;\nuniform vec2 resolution;\nvarying vec2 v_uv0;\n\nvec3 rotateX(float a, vec3 v)\n{\n\treturn vec3(v.x, cos(a) * v.y + sin(a) * v.z, cos(a) * v.z - sin(a) * v.y);\n}\n\nvec3 rotateY(float a, vec3 v)\n{\n\treturn vec3(cos(a) * v.x + sin(a) * v.z, v.y, cos(a) * v.z - sin(a) * v.x);\n}\n\nvec3 rotateZ(float a, vec3 v)\n{\n\treturn vec3(cos(a) * v.x + sin(a) * v.y, cos(a) * v.y - sin(a) * v.x, v.z);\n}\n\nvec4 grass(vec2 p, float x)\n{\n\tfloat s = mix(0.7, 2.0, 0.5 + sin(x * 12.0) * 0.5);\n\tp.x += pow(1.0 + p.y, 2.0) * 0.1 * cos(x * 0.5 + time);\n\tp.x *= s;\n\tp.y = (1.0 + p.y) * s - 1.0;\n\tfloat m = 1.0 - smoothstep(0.0, clamp(1.0 - p.y * 1.5, 0.01, 0.6) * 0.2 * s, pow(abs(p.x) * 19.0, 1.5) + p.y - 0.6);\n\treturn vec4(mix(vec3(0.05, 0.1, 0.0) * 0.8, vec3(0.0, 0.3, 0.0), (p.y + 1.0) * 0.5 + abs(p.x)), m * smoothstep(-1.0, -0.9, p.y));\n}\n\nvec3 backg(vec3 ro, vec3 rd)\n{\n\treturn vec3(0.0, 0.0, 0.0);\n\t// float t = (-1.0 - ro.y) / rd.y;\n\t// vec2 tc = ro.xz + rd.xz * t;\n\t// vec3 horiz = vec3(0.0, 0.2, 0.2) * 0.7;\n\t// vec3 sky = mix(horiz, vec3(0.1, 0.13, 0.15) * 0.8, dot(rd, vec3(0.0, 1.0, 0.0)));\n\t// vec3 ground = mix(horiz, vec3(0.04, 0.07, 0.0) * 0.6, pow(max(0.0, dot(rd, vec3(0.0, -1.0, 0.0))), 0.2));\n\t// return mix(sky, ground, step(0.0, t));\n}\n\n// some simple noise just to break up the hideous banding\nfloat dither()\n{\n\treturn fract(gl_FragCoord.x * 0.482635532 + gl_FragCoord.y * 0.1353412 + time * 100.0) * 0.008;\n}\n\nvoid main()\n{\n\tvec3 ct = vec3(0.0, 1.0, 5.0);\n\tvec3 cp = rotateY(cos(time * 0.2) * 0.4, vec3(0.0, 0.6, 0.0));\n\tvec3 cw = normalize(cp - ct);\n\tvec3 cu = normalize(cross(cw, vec3(0.0, 1.0, 0.0)));\n\tvec3 cv = normalize(cross(cu, cw));\n\n\tmat3 rm = mat3(cu, cv, cw);\n\n\t//\u6587\u7406y\u5750\u6807\u53cd\u8f6c\n\tvec2 uv = -v_uv0.xy * 2.0 + vec2(1.0);\n\tvec2 t = uv;\n\tt.x *= resolution.x / resolution.y;\n\n\tvec3 ro = cp, rd = rotateY(sin(time * 0.7) * 0.1, rm * rotateZ(sin(time * 0.15) * 0.1, vec3(t, -1.3)));\n\n\tvec3 fcol = backg(ro, rd);\n\n\tfor(int i = 0; i < BLADES; i += 1)\n\t{\n\t\tfloat z = -(float(BLADES - i) * 0.1 + 1.0);\n\t\tvec4 pln = vec4(0.0, 0.0, -1.0, z);\n\t\tfloat t = (pln.w - dot(pln.xyz, ro)) / dot(pln.xyz, rd);\n\t\tvec2 tc = ro.xy + rd.xy * t;\n\n\t\ttc.x += cos(float(i) * 3.0) * 4.0;\n\n\t\tfloat cell = floor(tc.x);\n\n\t\ttc.x = (tc.x - cell) - 0.5;\n\n\t\tvec4 c = grass(tc, float(i) + cell * 10.0);\n\n\t\tfcol = mix(fcol, c.rgb, step(0.0, t) * c.w);\n\t}\n\n\tfcol = pow(fcol * 1.1, vec3(0.8));\n\n\n\t// i\xc3\xb1igo quilez's great vigneting effect!\n\tvec2 q = (uv + vec2(1.)) * 0.5;\n\tfcol *= 0.2 + 0.8*pow( 16.0*q.x*q.y*(1.0-q.x)*(1.0-q.y), 0.1 );\n\n\tif (fcol.x == 0. && fcol.y == 0. && fcol.z ==0.){\n\t\tdiscard;\n\t} else {\n\t\tgl_FragColor.rgb = fcol * 1.8 + vec3(dither());\n\t\tgl_FragColor.a = 1.0;\n\t}\n}"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=(p.property,function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t}return o(t,e),t.prototype.doStart=function(e,t,n){var o=cc.winSize,r=new cc.Vec2(o.width,o.height);t.setParamValue("resolution",r)},t.prototype.doUpdate=function(e,t,n){},t=r([u],t)}(i.default));n.default=f,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderHook:[function(e,t,n){"use strict";cc._RF.push(t,"6ec07tIleFO0bVTBDYEy/jq","ShaderHook"),Object.defineProperty(n,"__esModule",{value:!0});var o=cc.renderer.renderEngine,r=o.SpriteMaterial,a=o.GraySpriteMaterial;cc.Sprite.prototype.setMaterials=function(e,t){this._materials||(this._materials={}),this._materials[e]=t},cc.Sprite.prototype.activateMaterial=function(e){var t=this._materials[e];t&&t!==this._currMaterial&&(t?(this.node&&(t.color=this.node.color),this.spriteFrame&&(t.texture=this.spriteFrame.getTexture()),this.node._renderFlag|=cc.RenderFlow.FLAG_COLOR,this._currMaterial=t,this._currMaterial.name=e,this._state=101,this._activateMaterial()):console.error("activateMaterial - unknwon material: ",e))},cc.Sprite.prototype._activateMaterial=function(){var e=this._spriteFrame;if(cc.game.renderType!==cc.game.RENDER_TYPE_CANVAS){var t=void 0;if(this._state===cc.Sprite.State.GRAY)this._graySpriteMaterial||(this._graySpriteMaterial=new a),t=this._graySpriteMaterial,this._currMaterial=null;else if(101===this._state){if(!this._currMaterial)return;t=this._currMaterial}else this._spriteMaterial||(this._spriteMaterial=new r),t=this._spriteMaterial,this._currMaterial=null;if(t.useColor=!1,e&&e.textureLoaded()){var n=e.getTexture();t.texture!==n?(t.texture=n,this._updateMaterial(t)):t!==this._material&&this._updateMaterial(t),this._renderData&&(this._renderData.material=t),this.node._renderFlag|=cc.RenderFlow.FLAG_COLOR,this.markForUpdateRenderData(!0),this.markForRender(!0)}else this.disableRender()}else this.markForUpdateRenderData(!0),this.markForRender(!0)},cc._RF.pop()},{}],ShaderInterstellar:[function(e,t,n){"use strict";cc._RF.push(t,"9fec09Q6b5BN7HGCsag+JE6","ShaderInterstellar");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderInterstellar",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT}],vert:a.MVP,frag:"\n        uniform sampler2D texture;\n        uniform vec4 uvfix;\n        uniform vec2 resolution;\n        uniform float time;\n        uniform float speed;\n        varying vec2 v_uv0;\n\n        const float tau = 6.28318530717958647692;\n\n        // Gamma correction\n        #define GAMMA (2.2)\n\n        vec2 bigger(in vec2 uv){\n            return (uvfix.xy - uvfix.zw) * uv;\n        }\n\n        float random(in vec2 st)\n        {\n            return fract(sin(dot(st.xy,vec2(12.443,78.4)))*43758.2);\n        }\n\n        vec3 ToLinear( in vec3 col )\n        {\n            // simulate a monitor, converting colour values into light values\n            return pow( col, vec3(GAMMA) );\n        }\n\n        vec3 ToGamma( in vec3 col )\n        {\n            // convert back into colour values, so the correct light will come out of the monitor\n            return pow( col, vec3(1.0/GAMMA) );\n        }\n\n        vec4 Noise( in ivec2 x )\n        {\n            return texture2D( texture, (vec2(x)+0.5)/256.0);\n        }\n\n        vec4 Rand( in int x )\n        {\n            vec2 uv;\n            uv.x = (float(x)+0.5)/256.0;\n            uv.y = (floor(uv.x)+0.5)/256.0;\n            return texture2D( texture, uv);\n        }\n\n\n        void main()\n        {\n            vec3 ray;\n            ray.xy = 4.*(bigger(v_uv0.xy));\n            ray.z = 1.0;\n\n            float offset = time*speed*.5;\n            float speed2 = (cos(offset)+1.0)*2.0;\n            float speed = speed2+.1;\n            offset += sin(offset)*.96;\n            offset *= 2.0;\n\n\n            vec3 col = vec3(0);\n\n            vec3 stp = ray/max(abs(ray.x),abs(ray.y));\n\n            vec3 pos = 2.0*stp+.5;\n            for ( int i=0; i < 20; i++ )\n            {\n                float z = Noise(ivec2(pos.xy)).x;\n                z = fract(z-offset);\n                float d = 50.0*z-pos.z;\n                float w = pow(max(0.0,1.0-8.0*length(fract(pos.xy)-.5)),2.0);\n                vec3 c = max(vec3(0),vec3(1.0-abs(d+speed2*.5)/speed,1.0-abs(d)/speed,1.0-abs(d-speed2*.5)/speed));\n                col += 1.5*(1.0-z)*c*w;\n                pos += stp;\n            }\n            //discard;\n            //fragColor = vec4(ToGamma(col),1.0);\n            gl_FragColor = vec4(ToGamma(col),1.0);\n        }\n        "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=.5,t.width=400,t.height=400,t.color=cc.color(255,102,38.25),t.clearColor=1,t.cScale=1e-5,t.noise=null,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=e.node.getContentSize();t.setParamValue("resolution",o),t.setParamValue("time",this.time),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f({type:cc.Float,tooltip:"\u8d8a\u5c0f\u8d8a\u6162"})],t.prototype,"speed",void 0),r([f({type:cc.Integer,min:1})],t.prototype,"width",void 0),r([f({type:cc.Integer,min:1})],t.prototype,"height",void 0),r([f(cc.Color)],t.prototype,"color",void 0),r([f({type:cc.Enum(i.CLEAR_COLOR)})],t.prototype,"clearColor",void 0),r([f({type:cc.Float})],t.prototype,"cScale",void 0),r([f(cc.SpriteFrame)],t.prototype,"noise",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderManager:[function(e,t,n){"use strict";cc._RF.push(t,"cdc22TBhkhPioJNyrtMq9sK","ShaderManager"),Object.defineProperty(n,"__esModule",{value:!0});var o=e("./ShaderMaterial"),r=function(){function e(){this.shaders={}}return e.prototype.addShader=function(e){if(!this.shaders[e.name]){this.shaders[e.name]=e;var t=function(){var t=n._forward._programLib;!t._templates[e.name]&&t.define(e.name,e.vert,e.frag,e.defines||[])},n=cc.renderer;n._forward?t():cc.game.once(cc.game.EVENT_ENGINE_INITED,t)}},e.prototype.createShaderMaterial=function(e,t){return e&&cc.game.renderType!==cc.game.RENDER_TYPE_CANVAS?null===t?(e instanceof cc.Sprite&&e.setState(t),null):new o.ShaderMaterial(t):null},e}();n.shaderManager=new r,cc._RF.pop()},{"./ShaderMaterial":"ShaderMaterial"}],ShaderMaterial:[function(e,t,n){"use strict";cc._RF.push(t,"438fcVQuChIXZB7aOeqfdCy","ShaderMaterial");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}();Object.defineProperty(n,"__esModule",{value:!0});var r=e("./ShaderFunc"),a=cc.renderer.renderEngine,i=function(e){function t(t){var n=e.call(this,!1)||this,o=a.renderer,i=a.gfx,c=new o.Pass(t.name);c.setDepth(!1,!1),c.setCullMode(i.CULL_NONE),c.setBlend(i.BLEND_FUNC_ADD,i.BLEND_SRC_ALPHA,i.BLEND_ONE_MINUS_SRC_ALPHA,i.BLEND_FUNC_ADD,i.BLEND_SRC_ALPHA,i.BLEND_ONE_MINUS_SRC_ALPHA);var s=[{name:"texture",type:r.RENDERER_PARAMS.PARAM_TEXTURE_2D},{name:"color",type:r.RENDERER_PARAMS.PARAM_COLOR4},{name:"uvfix",type:r.RENDERER_PARAMS.PARAM_FLOAT4}];t.params&&(s=s.concat(t.params));var l=new o.Technique(["transparent"],s,[c]);return n.shader=t,n._texture=null,n._color={r:1,g:1,b:1,a:1},n._effect=new o.Effect([l],{},[]),n._mainTech=l,n}return o(t,e),Object.defineProperty(t.prototype,"effect",{get:function(){return this._effect},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"texture",{get:function(){return this._texture},set:function(e){this._texture!==e&&(this._texture=e,this._effect.setProperty("texture",e.getImpl()),this._texIds.texture=e.getId())},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"color",{set:function(e){this._color.r=e.r/255,this._color.g=e.g/255,this._color.b=e.b/255,this._color.a=e.a/255,this._effect.setProperty("color",this._color)},enumerable:!0,configurable:!0}),t.prototype.clone=function(){var e=new t(this.shader);return e.updateHash(),e},t.prototype.setParamValue=function(e,t){this._effect.setProperty(e,t)},t.prototype.getParamValue=function(e){return this._effect.getProperty(e)},t.prototype.setDefine=function(e,t){this._effect.define(e,t)},t}(a.Material);n.ShaderMaterial=i,cc._RF.pop()},{"./ShaderFunc":"ShaderFunc"}],ShaderRun2:[function(e,t,n){"use strict";cc._RF.push(t,"255a2ISza9MEoFeYN9ynxbY","ShaderRun2");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderRun2",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"wh",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"glowColor",type:c.RENDERER_PARAMS.PARAM_FLOAT4},{name:"amplitudeSize",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"clearColor",type:c.RENDERER_PARAMS.PARAM_INT},{name:"cScale",type:c.RENDERER_PARAMS.PARAM_FLOAT}],vert:a.MVP,frag:"\n        varying vec2 v_uv0;\n        uniform vec4 uvfix;\n        uniform vec2 resolution;\n        uniform float time;\n        uniform float speed;\n        uniform vec2 wh;\n        uniform vec4 glowColor;\n        uniform int clearColor;\n        uniform float cScale;\n        uniform float amplitudeSize;\n\n        vec2 bigger(in vec2 uv){\n            return (uvfix.xy - uvfix.zw) * uv;\n        }\n\n        float random(in vec2 st)\n        {\n            return fract(sin(dot(st.xy,vec2(12.443,78.4)))*43758.2);\n        }\n\n        float noise(in vec2 st)\n        {\n            vec2 i=floor(st);\n            vec2 f=fract(st);\n            float a=random(i);\n            float b=random(i+vec2(1.0,0.0));\n            float c=random(i+vec2(0.0,1.0));\n            float d=random(i+vec2(1.0,1.0));\n\n            vec2 u=smoothstep(0.0,1.0,f);\n            return mix(a,b,u.x)+(c-a)*u.y*(1.0-u.x)+(d-b)*u.x*u.y;\n\n        }\n        float circle(vec2 p,float scale)\n        {\n            if(wh.x!=wh.y){\n                float l = wh.x+wh.y;\n                float radio = (wh.x-wh.y)/l;\n                if(p.x>0.){\n                    p.x\t-= radio;\n                }else{\n                    p.x += radio;\n                }\n            }\n            float f = 0.0;\n            f += 0.1/abs(length(p*p*p*p*p*p)- cScale*scale);\n            return f;\n        }\n\n        void main( )\n        {\n            vec2 p = bigger(v_uv0.xy);\n            p.y = 1. - p.y;\n            p*=4.;\n            p-=vec2(2.,2.);\n\n            float f = 0.0;\n            p.x+=sin(p.y*23.0+time*speed*17.)*amplitudeSize;\n            p.x+=sin(p.y*37.0+time*speed*13.)*amplitudeSize;\n            p.x+=sin(p.y*50.0+time*speed*11.)*amplitudeSize;\n            float d=circle(p,5.);\n\n            vec4 tempColor = glowColor*d;\n            float alpha = 0.;\n            if(clearColor == 1){\n                alpha = tempColor.r;\n            } else if(clearColor == 2){\n                alpha = tempColor.g;\n            } else if(clearColor == 3){\n                alpha = tempColor.b;\n            } else if(clearColor == 4){\n                alpha = tempColor.r*tempColor.g;\n            } else if(clearColor == 5){\n                alpha = tempColor.r*tempColor.b;\n            } else if(clearColor == 6){\n                alpha = tempColor.g*tempColor.b;\n            } else if(clearColor == 7){\n                alpha = tempColor.r*tempColor.g*tempColor.b;\n            }\n            gl_FragColor = vec4(tempColor.rgb,alpha);\n        }\n        "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=.5,t.wh=cc.v2(400,400),t.color=cc.color(255,102,38.25),t.clearColor=1,t.cScale=1e-5,t.amplitudeSize=.02,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=e.node.getContentSize();t.setParamValue("resolution",o),t.setParamValue("time",this.time),t.setParamValue("speed",this.speed),t.setParamValue("wh",this.wh),t.setParamValue("glowColor",{x:this.color.getR()/255,y:this.color.getG()/255,z:this.color.getB()/255,w:this.color.getA()/255}),t.setParamValue("clearColor",this.clearColor),t.setParamValue("cScale",this.cScale),t.setParamValue("amplitudeSize",this.amplitudeSize)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f({type:cc.Float,tooltip:"\u8d8a\u5c0f\u8d8a\u6162"})],t.prototype,"speed",void 0),r([f(cc.Vec2)],t.prototype,"wh",void 0),r([f(cc.Color)],t.prototype,"color",void 0),r([f({type:cc.Enum(i.CLEAR_COLOR)})],t.prototype,"clearColor",void 0),r([f({type:cc.Float})],t.prototype,"cScale",void 0),r([f(cc.Float)],t.prototype,"amplitudeSize",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderRun3:[function(e,t,n){"use strict";cc._RF.push(t,"51157aozu1McZBDi6ccnqAy","ShaderRun3");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderRun3",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"wh",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"glowColor",type:c.RENDERER_PARAMS.PARAM_FLOAT4},{name:"clearColor",type:c.RENDERER_PARAMS.PARAM_INT},{name:"cScale",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"amplitudeSize",type:c.RENDERER_PARAMS.PARAM_FLOAT}],vert:a.MVP,frag:"\n        varying vec2 v_uv0;\n        uniform vec4 uvfix;\n        uniform vec2 resolution;\n        uniform float time;\n        uniform float speed;\n        uniform vec2 wh;\n        uniform vec4 glowColor;\n        uniform int clearColor;\n        uniform float cScale;\n        uniform float amplitudeSize;\n\n        vec2 bigger(in vec2 uv){\n            return (uvfix.xy - uvfix.zw) * uv;\n        }\n\n        float random(in vec2 st)\n        {\n            return fract(sin(dot(st.xy,vec2(12.443,78.4)))*43758.2);\n        }\n\n        float noise(in vec2 st)\n        {\n            vec2 i=floor(st);\n            vec2 f=fract(st);\n            float a=random(i);\n            float b=random(i+vec2(1.0,0.0));\n            float c=random(i+vec2(0.0,1.0));\n            float d=random(i+vec2(1.0,1.0));\n\n            vec2 u=smoothstep(0.0,1.0,f);\n            return mix(a,b,u.x)+(c-a)*u.y*(1.0-u.x)+(d-b)*u.x*u.y;\n\n        }\n        float circle(vec2 p,float scale)\n        {\n            if(wh.x!=wh.y){\n                float l = wh.x+wh.y;\n                float radio = (wh.x-wh.y)/l;\n                if(p.x>0.){\n                    p.x\t-= radio;\n                }else{\n                    p.x += radio;\n                }\n            }\n            float f = 0.0;\n            f += 0.1/abs(length(p*p*p*p*p*p)- cScale*scale);\n            return f;\n        }\n\n        void main( )\n        {\n            vec2 p = bigger(v_uv0.xy);\n            p.y = 1. - p.y;\n\n            p = 4.*p - 2.;\n\n            float f = 0.0;\n            float px = 0.;\n            px +=sin(p.y*23.0+time*speed*17.)*amplitudeSize;\n            px +=sin(p.y*37.0+time*speed*13.)*amplitudeSize;\n            px +=sin(p.y*50.0+time*speed*11.)*amplitudeSize;\n            float py = 0.;\n            py+=sin(p.x*23.0+time*speed*27.)*amplitudeSize;\n            py+=sin(p.x*37.0+time*speed*23.)*amplitudeSize;\n            py+=sin(p.x*50.0+time*speed*21.)*amplitudeSize;\n            float d=circle(p+vec2(px,py),5.);\n\n            vec4 tempColor = glowColor*d;\n            float alpha = 0.;\n            if(clearColor == 1){\n                alpha = tempColor.r;\n            } else if(clearColor == 2){\n                alpha = tempColor.g;\n            } else if(clearColor == 3){\n                alpha = tempColor.b;\n            } else if(clearColor == 4){\n                alpha = tempColor.r*tempColor.g;\n            } else if(clearColor == 5){\n                alpha = tempColor.r*tempColor.b;\n            } else if(clearColor == 6){\n                alpha = tempColor.g*tempColor.b;\n            } else if(clearColor == 7){\n                alpha = tempColor.r*tempColor.g*tempColor.b;\n            }\n            gl_FragColor = vec4(tempColor.rgb,alpha);\n        }\n        "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=.5,t.wh=cc.v2(400,400),t.color=cc.color(255,102,38.25),t.clearColor=1,t.cScale=1e-5,t.amplitudeSize=.02,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=e.node.getContentSize();t.setParamValue("resolution",o),t.setParamValue("time",this.time),t.setParamValue("speed",this.speed),t.setParamValue("wh",this.wh),t.setParamValue("glowColor",{x:this.color.getR()/255,y:this.color.getG()/255,z:this.color.getB()/255,w:this.color.getA()/255}),t.setParamValue("clearColor",this.clearColor),t.setParamValue("cScale",this.cScale),t.setParamValue("amplitudeSize",this.amplitudeSize)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f({type:cc.Float,tooltip:"\u8d8a\u5c0f\u8d8a\u6162"})],t.prototype,"speed",void 0),r([f(cc.Vec2)],t.prototype,"wh",void 0),r([f(cc.Color)],t.prototype,"color",void 0),r([f({type:cc.Enum(i.CLEAR_COLOR)})],t.prototype,"clearColor",void 0),r([f({type:cc.Float})],t.prototype,"cScale",void 0),r([f(cc.Float)],t.prototype,"amplitudeSize",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderRun:[function(e,t,n){"use strict";cc._RF.push(t,"5ed45tX1GVN7JYDizxOKWaq","ShaderRun");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderRun",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"wh",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"len",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"intensity",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"radius",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"smooth",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"blurColor",type:c.RENDERER_PARAMS.PARAM_FLOAT3},{name:"blurColor1",type:c.RENDERER_PARAMS.PARAM_FLOAT3}],vert:a.MVP,frag:"\n        #define POINT_COUNT 25\n\n        vec2 points[POINT_COUNT];\n        const float speed2 = -0.5;\n        const float scale = 0.05;\n\n        varying vec2 v_uv0;\n        uniform vec4 uvfix;\n        uniform vec2 resolution;\n        uniform vec2 smooth;\n        uniform float time;\n        uniform float speed;\n        uniform float len;\n        uniform vec2 wh;\n        uniform float intensity;\n        uniform float radius;\n        uniform vec3 blurColor;\n        uniform vec3 blurColor1;\n\n\n        vec2 bigger(in vec2 uv){\n            return (uvfix.xy - uvfix.zw) * uv ;\n        }\n\n        vec2 smaller(in vec2 uv){\n            return uv/uvfix.xy + uvfix.zw;\n        }\n\n\n        //https://www.shadertoy.com/view/MlKcDD\n        //Signed distance to a quadratic bezier\n        float sdBezier(vec2 pos, vec2 A, vec2 B, vec2 C){\n            vec2 a = B - A;\n            vec2 b = A - 2.0*B + C;\n            vec2 c = a * 2.0;\n            vec2 d = A - pos;\n\n            float kk = 1.0 / dot(b,b);\n            float kx = kk * dot(a,b);\n            float ky = kk * (2.0*dot(a,a)+dot(d,b)) / 3.0;\n            float kz = kk * dot(d,a);\n\n            float res = 0.0;\n\n            float p = ky - kx*kx;\n            float p3 = p*p*p;\n            float q = kx*(2.0*kx*kx - 3.0*ky) + kz;\n            float h = q*q + 4.0*p3;\n\n            if(h >= 0.0){\n                h = sqrt(h);\n                vec2 x = (vec2(h, -h) - q) / 2.0;\n                vec2 uv = sign(x)*pow(abs(x), vec2(1.0/3.0));\n                float t = uv.x + uv.y - kx;\n                t = clamp( t, 0.0, 1.0 );\n\n                // 1 root\n                vec2 qos = d + (c + b*t)*t;\n                res = length(qos);\n            }else{\n                float z = sqrt(-p);\n                float v = acos( q/(p*z*2.0) ) / 3.0;\n                float m = cos(v);\n                float n = sin(v)*1.732050808;\n                vec3 t = vec3(m + m, -n - m, n - m) * z - kx;\n                t = clamp( t, 0.0, 1.0 );\n\n                // 3 roots\n                vec2 qos = d + (c + b*t.x)*t.x;\n                float dis = dot(qos,qos);\n\n                res = dis;\n\n                qos = d + (c + b*t.y)*t.y;\n                dis = dot(qos,qos);\n                res = min(res,dis);\n\n                qos = d + (c + b*t.z)*t.z;\n                dis = dot(qos,qos);\n                res = min(res,dis);\n\n                res = sqrt( res );\n            }\n\n            return res;\n        }\n\n        vec2 getSquare(float t){\n            float size = 20.0;\n            float len = wh.x + wh.y;\n            float ratio = wh.y/len;\n            float high = size * ratio;\n            float width = size - high;\n            float progress = mod(t, 6.28) / 6.28 * size * 2.0;\n            if (progress < width) {\n                return vec2(-width/2.0 + progress, -high/2.0);\n            }\n            if (progress < size) {\n                return vec2(width/2.0, -high/2.0 + progress - width);\n            }\n            if (progress < size + width) {\n                return vec2(width/2.0-(progress-size), high/2.0);\n            }\n            return vec2(-width/2.0, high/2.0 -(progress-size-width));\n        }\n\n        //https://www.shadertoy.com/view/3s3GDn\n        float getGlow(float dist, float radius, float intensity){\n            return pow(radius/dist, intensity);\n        }\n\n        float getSegment(float t, vec2 pos, float offset){\n            for(int i = 0; i < POINT_COUNT; i++){\n                float t = offset + float(i)*len + fract(speed2 * t) * 6.28;\n                points[i] = getSquare(t);\n            }\n\n            vec2 c = (points[0] + points[1] + points[2]) / 3.0;\n            vec2 c_prev;\n            float dist = 10000.;\n\n            for(int i = 0; i < POINT_COUNT-2; i++){\n                //https://tinyurl.com/y2htbwkm\n                c_prev = c;\n                c = (points[i] + points[i+1] + points[i+2]) / 3.0;\n                float tempDis = min(dist, sdBezier(pos, scale * c_prev, scale * points[i], scale * c));\n                if(tempDis<dist){\n                    dist = tempDis;\n                }\n            }\n            return max(0.0, dist);\n        }\n\n        void main(){\n            vec2 uv = bigger(v_uv0.xy);\n            uv.y = 1. - uv.y;\n\n            // float widthHeightRatio = resolution.x/resolution.y;\n            vec2 centre = vec2(0.5, 0.5);\n            vec2 pos = centre - uv;\n            //Shift upwards to centre heart\n\n            float t = time*speed;\n\n            //Get first segment\n            float dist = getSegment(t, pos, 0.0);\n            float glow = getGlow(dist, radius, intensity);\n\n            vec3 col = vec3(0.0);\n            //White core\n            col += 10.*vec3(smoothstep(smooth.x,smooth.y, dist));\n            //glow1\n            col += glow * blurColor;\n\n            //Get second segment\n            dist = getSegment(t, pos, 3.14);\n            glow = getGlow(dist, radius, intensity);\n            // //White core\n            col += 10.*vec3(smoothstep(smooth.x,smooth.y, dist));\n            // //glow2\n            col += glow * blurColor1;\n\n            // //Tone mapping\n            col = 1.0 - exp(-col);\n\n\n            // //Output to screen\n            gl_FragColor = vec4(col,col.r*col.g*col.b);\n        }\n        "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=.5,t.wh=cc.v2(400,400),t.len=.15,t.intensity=.5,t.radius=.02,t.smoothStep=cc.v2(.009,.003),t.blurColor=cc.color(51,153,255),t.blurColor1=cc.color(51,153,255),t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=e.node.getContentSize();t.setParamValue("resolution",o),t.setParamValue("time",this.time),t.setParamValue("speed",this.speed),t.setParamValue("wh",this.wh),t.setParamValue("len",this.len),t.setParamValue("intensity",this.intensity),t.setParamValue("radius",this.radius),t.setParamValue("smooth",this.smoothStep),t.setParamValue("blurColor",new cc.Vec3(this.blurColor.getR()/255,this.blurColor.getG()/255,this.blurColor.getB()/255)),t.setParamValue("blurColor1",new cc.Vec3(this.blurColor1.getR()/255,this.blurColor1.getG()/255,this.blurColor1.getB()/255))},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f({type:cc.Float,tooltip:"\u8d8a\u5c0f\u8d8a\u6162"})],t.prototype,"speed",void 0),r([f(cc.Vec2)],t.prototype,"wh",void 0),r([f({type:cc.Float,min:.01})],t.prototype,"len",void 0),r([f({type:cc.Float,min:.01})],t.prototype,"intensity",void 0),r([f({type:cc.Float,min:1e-4})],t.prototype,"radius",void 0),r([f(cc.Vec2)],t.prototype,"smoothStep",void 0),r([f(cc.color)],t.prototype,"blurColor",void 0),r([f(cc.color)],t.prototype,"blurColor1",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderSearch:[function(e,t,n){"use strict";cc._RF.push(t,"f30daMnni1FFaedd1sC4gX9","ShaderSearch");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderSearch",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"mouse",type:c.RENDERER_PARAMS.PARAM_FLOAT2}],defines:[],vert:a.MVP,frag:"\n    #ifdef GL_ES\n    precision mediump float;\n    #endif\n    uniform sampler2D texture;\n    uniform vec2 resolution;\n    uniform vec2 mouse;\n    uniform vec4 uvfix;\n    varying vec2 v_uv0;\n    void main()\n    {\n        // y\u5750\u6807\u7ffb\u8f6c\n        vec2 imouse = vec2(mouse.x, resolution.y - mouse.y);\n        // \u7eb9\u7406\u5750\u6807\n        vec2 uv = v_uv0.xy ;\n        // \u7eb9\u7406\u91c7\u6837\n        vec4 tex = texture2D(texture, uv);\n        // gl_FragColor = tex;\n        if (true){\n            vec2 uv_fixed = uvfix.xy * uv + uvfix.zw;\n            // \u7247\u5143\u5230\u9f20\u6807\u70b9\u7684\u5dee\u5411\u91cf\n            vec2 d = uv_fixed * resolution.xy - imouse.xy;\n            // \u5149\u7167\u534a\u5f84\n            vec2 s = 0.15 * resolution.xy;\n            // \u70b9\u79ef\u53d6\u6bd4\u4f8b\n            float r = dot(d, d)/dot(s,s);\n            gl_FragColor = tex * (1.08 - r);\n        }\n    }\n    "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=(p.property,function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t}return o(t,e),t.prototype.doStart=function(e,t,n){var o=cc.winSize,r=new cc.Vec2(o.width,o.height);t.setParamValue("resolution",r),t.setParamValue("mouse",r.div(2))},t.prototype.doUpdate=function(e,t,n){},t=r([u],t)}(i.default));n.default=f,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderSparksDrifting:[function(e,t,n){"use strict";cc._RF.push(t,"57b21PwsR1GpJ31QnZmgAJI","ShaderSparksDrifting");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderSparksDrifting",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"detal",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"sizeIn",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"sizeOut",type:c.RENDERER_PARAMS.PARAM_FLOAT}],vert:a.MVP,frag:"\n        uniform vec4 uvfix;\n        uniform vec2 resolution;\n        uniform float time;\n        uniform float speed;\n        uniform float detal;\n        uniform float sizeIn;\n        uniform float sizeOut;\n        varying vec2 v_uv0;\n\n        vec2 bigger(in vec2 uv){\n            return (uvfix.xy - uvfix.zw) * uv;\n        }\n\n        vec3 mod289(vec3 x) {\n            return x - floor(x * (1.0 / 289.0)) * 289.0;\n        }\n\n        vec4 mod289(vec4 x) {\n            return x - floor(x * (1.0 / 289.0)) * 289.0;\n        }\n\n        vec4 permute(vec4 x) {\n                return mod289(((x*34.0)+1.0)*x);\n        }\n\n        vec4 taylorInvSqrt(vec4 r)\n        {\n            return 1.79284291400159 - 0.85373472095314 * r;\n        }\n\n        float snoise(vec3 v)\n        {\n            const vec2\tC = vec2(1.0/6.0, 1.0/3.0) ;\n            const vec4\tD = vec4(0.0, 0.5, 1.0, 2.0);\n\n            // First corner\n            vec3 i\t= floor(v + dot(v, C.yyy) );\n            vec3 x0 =\t v - i + dot(i, C.xxx) ;\n\n            // Other corners\n            vec3 g = step(x0.yzx, x0.xyz);\n            vec3 l = 1.0 - g;\n            vec3 i1 = min( g.xyz, l.zxy );\n            vec3 i2 = max( g.xyz, l.zxy );\n\n            //\t x0 = x0 - 0.0 + 0.0 * C.xxx;\n            //\t x1 = x0 - i1\t+ 1.0 * C.xxx;\n            //\t x2 = x0 - i2\t+ 2.0 * C.xxx;\n            //\t x3 = x0 - 1.0 + 3.0 * C.xxx;\n            vec3 x1 = x0 - i1 + C.xxx;\n            vec3 x2 = x0 - i2 + C.yyy; // 2.0*C.x = 1/3 = C.y\n            vec3 x3 = x0 - D.yyy;\t\t\t// -1.0+3.0*C.x = -0.5 = -D.y\n\n            // Permutations\n            i = mod289(i);\n            vec4 p = permute( permute( permute(\n                                i.z + vec4(0.0, i1.z, i2.z, 1.0 ))\n                            + i.y + vec4(0.0, i1.y, i2.y, 1.0 ))\n                            + i.x + vec4(0.0, i1.x, i2.x, 1.0 ));\n\n            // Gradients: 7x7 points over a square, mapped onto an octahedron.\n            // The ring size 17*17 = 289 is close to a multiple of 49 (49*6 = 294)\n            float n_ = 0.142857142857; // 1.0/7.0\n            vec3\tns = n_ * D.wyz - D.xzx;\n\n            vec4 j = p - 49.0 * floor(p * ns.z * ns.z);\t//\tmod(p,7*7)\n\n            vec4 x_ = floor(j * ns.z);\n            vec4 y_ = floor(j - 7.0 * x_ );\t\t// mod(j,N)\n\n            vec4 x = x_ *ns.x + ns.yyyy;\n            vec4 y = y_ *ns.x + ns.yyyy;\n            vec4 h = 1.0 - abs(x) - abs(y);\n\n            vec4 b0 = vec4( x.xy, y.xy );\n            vec4 b1 = vec4( x.zw, y.zw );\n\n            //vec4 s0 = vec4(lessThan(b0,0.0))*2.0 - 1.0;\n            //vec4 s1 = vec4(lessThan(b1,0.0))*2.0 - 1.0;\n            vec4 s0 = floor(b0)*2.0 + 1.0;\n            vec4 s1 = floor(b1)*2.0 + 1.0;\n            vec4 sh = -step(h, vec4(0.0));\n\n            vec4 a0 = b0.xzyw + s0.xzyw*sh.xxyy ;\n            vec4 a1 = b1.xzyw + s1.xzyw*sh.zzww ;\n\n            vec3 p0 = vec3(a0.xy,h.x);\n            vec3 p1 = vec3(a0.zw,h.y);\n            vec3 p2 = vec3(a1.xy,h.z);\n            vec3 p3 = vec3(a1.zw,h.w);\n\n            //Normalise gradients\n            //vec4 norm = taylorInvSqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n            vec4 norm = inversesqrt(vec4(dot(p0,p0), dot(p1,p1), dot(p2, p2), dot(p3,p3)));\n            p0 *= norm.x;\n            p1 *= norm.y;\n            p2 *= norm.z;\n            p3 *= norm.w;\n\n            // Mix final noise value\n            vec4 m = max(0.6 - vec4(dot(x0,x0), dot(x1,x1), dot(x2,x2), dot(x3,x3)), 0.0);\n            m = m * m;\n            return 42.0 * dot( m*m, vec4( dot(p0,x0), dot(p1,x1), dot(p2,x2), dot(p3,x3) ) );\n        }\n\n        //////////////////////////////////////////////////////////////\n\n        // PRNG\n        // From https://www.shadertoy.com/view/4djSRW\n        float prng(in vec2 seed) {\n            seed = fract (seed * vec2 (5.3983, 5.4427));\n            seed += dot (seed.yx, seed.xy + vec2 (21.5351, 14.3137));\n            return fract (seed.x * seed.y * 95.4337);\n        }\n\n        //////////////////////////////////////////////////////////////\n\n        float PI = 3.1415926535897932384626433832795;\n\n        float noiseStack(vec3 pos,int octaves,float falloff){\n            float noise = snoise(vec3(pos));\n            float off = 1.0;\n            if (octaves>1) {\n                pos *= 2.0;\n                off *= falloff;\n                noise = (1.0-off)*noise + off*snoise(vec3(pos));\n            }\n            if (octaves>2) {\n                pos *= 2.0;\n                off *= falloff;\n                noise = (1.0-off)*noise + off*snoise(vec3(pos));\n            }\n            if (octaves>3) {\n                pos *= 2.0;\n                off *= falloff;\n                noise = (1.0-off)*noise + off*snoise(vec3(pos));\n            }\n            return (1.0+noise)/2.0;\n        }\n\n        vec2 noiseStackUV(vec3 pos,int octaves,float falloff,float diff){\n            float displaceA = noiseStack(pos,octaves,falloff);\n            float displaceB = noiseStack(pos+vec3(3984.293,423.21,5235.19),octaves,falloff);\n            return vec2(displaceA,displaceB);\n        }\n\n        void main() {\n            float itime = time*speed;\n            vec2 drag = vec2(0.,0.);\n            vec2 offset = vec2(0.,0.);\n\n            vec2 uv = bigger(v_uv0.xy);\n            uv.y = 1.-uv.y;\n            float xpart = uv.x;\n            float ypart = uv.y;\n            //\n            float clip = 1.0;\n            float ypartClip = uv.y/clip;\n            float ypartClippedFalloff = clamp(1.-ypartClip,0.0,1.0);\n            float ypartClipped = min(ypartClip,1.0);\n            float ypartClippedn = 1.0-ypartClipped;\n            //\n            float xfuel = 1.0-abs(2.0*xpart-1.0);//pow(1.0-abs(2.0*xpart-1.0),0.5);\n            //\n            float realTime = itime;\n            //\n            vec2 coordScaled = detal*uv;\n            vec3 position = vec3(coordScaled,0.0) + vec3(1223.0,6434.0,8425.0);\n            vec3 flow = vec3(4.1*(0.5-xpart)*pow(ypartClippedn,.0),-2.0*xfuel*pow(ypartClippedn,64.0),0.0);\n            vec3 timing = realTime*vec3(0.0,-1.7,1.1) + flow;\n            //\n            vec3 displacePos = vec3(1.0,0.5,1.0)*2.4*position+realTime*vec3(0.01,-0.7,1.3);\n            vec3 displace3 = vec3(noiseStackUV(displacePos,2,0.4,0.1),0.0);\n            //\n            vec3 noiseCoord = (vec3(2.0,1.0,1.0)*position+timing+0.4*displace3)/1.0;\n            float noise = noiseStack(noiseCoord,3,0.4);\n            //\n            float flames = pow(ypartClipped,sizeIn*xfuel)*pow(noise,sizeOut*xfuel);\n            //\n            float f = ypartClippedFalloff*pow(1.0-flames*flames*flames,2.0);\n            float fff = f*f*f;\n            vec3 fire = 1.5*vec3(f, fff, fff*fff);\n            //\n            // smoke\n            float smokeNoise = 0.5+snoise(0.4*position+timing*vec3(1.0,1.0,0.2))/2.0;\n            vec3 smoke = vec3(0.3*pow(xfuel,3.0)*pow(ypart,2.0)*(smokeNoise+0.4*(1.0-noise)));\n\n            gl_FragColor = vec4(fire+smoke*1.,fire);\n        }\n        "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=.5,t.detal=10,t.sizeIn=.4,t.sizeOut=.3,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=e.node.getContentSize();t.setParamValue("resolution",o),t.setParamValue("time",this.time),t.setParamValue("speed",this.speed),t.setParamValue("detal",this.detal),t.setParamValue("sizeIn",this.sizeIn),t.setParamValue("sizeOut",this.sizeOut)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f({type:cc.Float,tooltip:"\u8d8a\u5c0f\u8d8a\u6162"})],t.prototype,"speed",void 0),r([f({type:cc.Float})],t.prototype,"detal",void 0),r([f({type:cc.Float})],t.prototype,"sizeIn",void 0),r([f({type:cc.Float})],t.prototype,"sizeOut",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderSparks:[function(e,t,n){"use strict";cc._RF.push(t,"b4796lZt5JFN4VaXFhHSSUB","ShaderSparks");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderSparks",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT,defaultValue:0},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2}],vert:a.MVP,frag:"\n\t#ifdef GL_ES\n\tprecision mediump float;\n\t#endif\n\n\tuniform vec2 resolution;\n\tuniform float time;\n\tuniform float speed;\n\tuniform vec4 uvfix;\n\n\tvarying vec2 v_uv0;\n\n\tvec2 bigger(in vec2 uv){\n\t\treturn uvfix.xy * uv + uvfix.zw;\n\t}\n\n\tvec2 smaller(in vec2 uv){\n\t\treturn (uv - uvfix.zw) / uvfix.xy;\n\t}\n\n\t#define PI 3.1415927\n\t#define TWO_PI 6.283185\n\n\t#define ANIMATION_SPEED 1.5\n\t#define MOVEMENT_SPEED 1.0\n\t#define MOVEMENT_DIRECTION vec2(0.7, -1.0)\n\n\t#define PARTICLE_SIZE 0.009\n\n\t#define PARTICLE_SCALE (vec2(0.5, 1.6))\n\t#define PARTICLE_SCALE_VAR (vec2(0.25, 0.2))\n\n\t#define PARTICLE_BLOOM_SCALE (vec2(0.5, 0.8))\n\t#define PARTICLE_BLOOM_SCALE_VAR (vec2(0.3, 0.1))\n\n\t#define SPARK_COLOR vec3(1.0, 0.4, 0.05) * 1.5\n\t#define BLOOM_COLOR vec3(1.0, 0.4, 0.05) * 0.8\n\t#define SMOKE_COLOR vec3(1.0, 0.43, 0.1) * 0.8\n\n\t#define SIZE_MOD 1.05\n\t#define ALPHA_MOD 0.9\n\t#define LAYERS_COUNT 15\n\t#define LAYERS_NOISE1_COUNT 6\n\t#define LAYERS_NOISE2_COUNT 3\n\n\tfloat hash1_2(in vec2 x)\n\t{\n\t\treturn fract(sin(dot(x, vec2(52.127, 61.2871))) * 521.582);\n\t}\n\n\tvec2 hash2_2(in vec2 x)\n\t{\n\t\treturn fract(sin(x * mat2(20.52, 24.1994, 70.291, 80.171)) * 492.194);\n\t}\n\n\t//Simple interpolated noise\n\tvec2 noise2_2(vec2 uv)\n\t{\n\t\t//vec2 f = fract(uv);\n\t\tvec2 f = smoothstep(0.0, 1.0, fract(uv));\n\n\t\tvec2 uv00 = floor(uv);\n\t\tvec2 uv01 = uv00 + vec2(0,1);\n\t\tvec2 uv10 = uv00 + vec2(1,0);\n\t\tvec2 uv11 = uv00 + 1.0;\n\t\tvec2 v00 = hash2_2(uv00);\n\t\tvec2 v01 = hash2_2(uv01);\n\t\tvec2 v10 = hash2_2(uv10);\n\t\tvec2 v11 = hash2_2(uv11);\n\n\t\tvec2 v0 = mix(v00, v01, f.y);\n\t\tvec2 v1 = mix(v10, v11, f.y);\n\t\tvec2 v = mix(v0, v1, f.x);\n\n\t\treturn v;\n\t}\n\n\t//Simple interpolated noise\n\tfloat noise1_2(in vec2 uv)\n\t{\n\t\tvec2 f = fract(uv);\n\t\t//vec2 f = smoothstep(0.0, 1.0, fract(uv));\n\n\t\tvec2 uv00 = floor(uv);\n\t\tvec2 uv01 = uv00 + vec2(0,1);\n\t\tvec2 uv10 = uv00 + vec2(1,0);\n\t\tvec2 uv11 = uv00 + 1.0;\n\n\t\tfloat v00 = hash1_2(uv00);\n\t\tfloat v01 = hash1_2(uv01);\n\t\tfloat v10 = hash1_2(uv10);\n\t\tfloat v11 = hash1_2(uv11);\n\n\t\tfloat v0 = mix(v00, v01, f.y);\n\t\tfloat v1 = mix(v10, v11, f.y);\n\t\tfloat v = mix(v0, v1, f.x);\n\n\t\treturn v;\n\t}\n\n\tfloat layeredNoise1(in vec2 uv, in float sizeMod, in float alphaMod, in float animation)\n\t{\n\t\tfloat noise = 0.0;\n\t\tfloat alpha = 1.0;\n\t\tfloat size = 1.0;\n\t\tvec2 offset;\n\t\tfor (int i = 0; i < LAYERS_NOISE1_COUNT; i++)\n\t\t{\n\t\t\toffset += hash2_2(vec2(alpha, size)) * 10.0;\n\n\t\t\t//Adding noise with movement\n\t\t\tnoise += noise1_2(uv * size + time*speed * animation * 8.0 * MOVEMENT_DIRECTION * MOVEMENT_SPEED + offset) * alpha;\n\t\t\talpha *= alphaMod;\n\t\t\tsize *= sizeMod;\n\t\t}\n\n\t\tnoise *= (1.0 - alphaMod)/(1.0 - pow(alphaMod, float(LAYERS_NOISE1_COUNT)));\n\t\treturn noise;\n\t}\n\n\n\tfloat layeredNoise2(in vec2 uv, in float sizeMod, in float alphaMod, in float animation)\n\t{\n\t\tfloat noise = 0.0;\n\t\tfloat alpha = 1.0;\n\t\tfloat size = 1.0;\n\t\tvec2 offset;\n\t\tfor (int i = 0; i < LAYERS_NOISE2_COUNT; i++)\n\t\t{\n\t\t\toffset += hash2_2(vec2(alpha, size)) * 10.0;\n\n\t\t\t//Adding noise with movement\n\t\t\tnoise += noise1_2(uv * size + time*speed * animation * 8.0 * MOVEMENT_DIRECTION * MOVEMENT_SPEED + offset) * alpha;\n\t\t\talpha *= alphaMod;\n\t\t\tsize *= sizeMod;\n\t\t}\n\n\t\tnoise *= (1.0 - alphaMod)/(1.0 - pow(alphaMod, float(LAYERS_NOISE2_COUNT)));\n\t\treturn noise;\n\t}\n\n\t//Rotates point around 0,0\n\tvec2 rotate(in vec2 point, in float deg)\n\t{\n\t\tfloat s = sin(deg);\n\t\tfloat c = cos(deg);\n\t\treturn mat2(s, c, -c, s) * point;\n\t}\n\n\t//Cell center from point on the grid\n\tvec2 voronoiPointFromRoot(in vec2 root, in float deg)\n\t{\n\t\tvec2 point = hash2_2(root) - 0.5;\n\t\tfloat s = sin(deg);\n\t\tfloat c = cos(deg);\n\t\tpoint = mat2(s, c, -c, s) * point * 0.66;\n\t\tpoint += root + 0.5;\n\t\treturn point;\n\t}\n\n\t//Voronoi cell point rotation degrees\n\tfloat degFromRootUV(in vec2 uv)\n\t{\n\t\treturn time*speed * ANIMATION_SPEED * (hash1_2(uv) - 0.5) * 2.0;\n\t}\n\n\tvec2 randomAround2_2(in vec2 point, in vec2 range, in vec2 uv)\n\t{\n\t\treturn point + (hash2_2(uv) - 0.5) * range;\n\t}\n\n\n\tvec3 fireParticles(in vec2 uv, in vec2 originalUV)\n\t{\n\t\tvec3 particles = vec3(0.0);\n\t\tvec2 rootUV = floor(uv);\n\t\tfloat deg = degFromRootUV(rootUV);\n\t\tvec2 pointUV = voronoiPointFromRoot(rootUV, deg);\n\t\tfloat dist = 2.0;\n\t\tfloat distBloom = 0.0;\n\n\t\t//UV manipulation for the faster particle movement\n\t\tvec2 tempUV = uv + (noise2_2(uv * 2.0) - 0.5) * 0.1;\n\t\ttempUV += -(noise2_2(uv * 3.0 + time*speed) - 0.5) * 0.07;\n\n\t\t//Sparks sdf\n\t\tdist = length(rotate(tempUV - pointUV, 0.7) * randomAround2_2(PARTICLE_SCALE, PARTICLE_SCALE_VAR, rootUV));\n\n\t\t//Bloom sdf\n\t\tdistBloom = length(rotate(tempUV - pointUV, 0.7) * randomAround2_2(PARTICLE_BLOOM_SCALE, PARTICLE_BLOOM_SCALE_VAR, rootUV));\n\n\t\t//Add sparks\n\t\tparticles += (1.0 - smoothstep(PARTICLE_SIZE * 0.6, PARTICLE_SIZE * 3.0, dist)) * SPARK_COLOR;\n\n\t\t//Add bloom\n\t\tparticles += pow((1.0 - smoothstep(0.0, PARTICLE_SIZE * 6.0, distBloom)) * 1.0, 3.0) * BLOOM_COLOR;\n\n\t\t//Upper disappear curve randomization\n\t\tfloat border = (hash1_2(rootUV) - 0.5) * 2.0;\n\t\tfloat disappear = 1.0 - smoothstep(border, border + 0.5, originalUV.y);\n\n\t\t//Lower appear curve randomization\n\t\tborder = (hash1_2(rootUV + 0.214) - 1.8) * 0.7;\n\t\tfloat appear = smoothstep(border, border + 0.4, originalUV.y);\n\n\t\treturn particles * disappear * appear;\n\t}\n\n\n\t//Layering particles to imitate 3D view\n\tvec3 layeredParticles(in vec2 uv, in float sizeMod, in float alphaMod, in float smoke)\n\t{\n\t\tvec3 particles = vec3(0);\n\t\tfloat size = 1.0;\n\t\tfloat alpha = 1.0;\n\t\tvec2 offset = vec2(0.0);\n\t\tvec2 noiseOffset;\n\t\tvec2 bokehUV;\n\n\t\tfor (int i = 0; i < LAYERS_COUNT; i++)\n\t\t{\n\t\t\t//Particle noise movement\n\t\t\tnoiseOffset = (noise2_2(uv * size * 2.0 + 0.5) - 0.5) * 0.15;\n\n\t\t\t//UV with applied movement\n\t\t\tbokehUV = (uv * size + time*speed * MOVEMENT_DIRECTION * MOVEMENT_SPEED) + offset + noiseOffset;\n\n\t\t\t//Adding particles\t\t\t\t\t\t\t\tif there is more smoke, remove smaller particles\n\t\t\tparticles += fireParticles(bokehUV, uv) * alpha * (1.0 - smoothstep(0.0, 1.0, smoke) * (float(i) / float(LAYERS_COUNT)));\n\n\t\t\t//Moving uv origin to avoid generating the same particles\n\t\t\toffset += hash2_2(vec2(alpha, alpha)) * 10.0;\n\n\t\t\talpha *= alphaMod;\n\t\t\tsize *= sizeMod;\n\t\t}\n\n\t\treturn particles;\n\t}\n\n\tvoid main(void)\n\t{\n\t\t// vec2 uv = (gl_FragCoord.xy - resolution.xy) / resolution.x;\n\t\tvec2 fragCoord = vec2(v_uv0.x, 1.- v_uv0.y) * resolution;\n\t\tvec2 uv = (fragCoord.xy - resolution.xy) / resolution.x;\n\n\t\tfloat vignette = 1.0 - smoothstep(0.4, 1.4, length(uv + vec2(0.0, 0.3)));\n\n\t\tuv *= 1.8;\n\n\t\tfloat smokeIntensity = layeredNoise1(uv * 10.0 + time*speed * 4.0 * MOVEMENT_DIRECTION * MOVEMENT_SPEED, 1.7, 0.7, 0.2);\n\t\tsmokeIntensity *= pow(1.0 - smoothstep(-1.0, 1.6, uv.y), 2.0);\n\t\tvec3 smoke = smokeIntensity * SMOKE_COLOR * 0.8 * vignette;\n\n\t\t//Cutting holes in smoke\n\t\tsmoke *= pow(layeredNoise2(uv * 4.0 + time*speed * 0.5 * MOVEMENT_DIRECTION * MOVEMENT_SPEED, 1.8, 0.5, 0.2), 2.0) * 1.5;\n\n\t\tvec3 particles = layeredParticles(uv, SIZE_MOD, ALPHA_MOD, smokeIntensity);\n\n\t\tvec3 col = particles + smoke + SMOKE_COLOR * 0.02;\n\t\tcol *= vignette;\n\n\t\tcol = smoothstep(-0.08, 1.0, col);\n\n\t\tgl_FragColor = vec4(col, col.r);\n\t}\n\t"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.time=0,t.speed=.5,t}return o(t,e),t.prototype.doStart=function(e,t,n){this.time=0;var o=new cc.Vec2(e.node.width,e.node.height);t.setParamValue("resolution",o),t.setParamValue("time",0),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f({type:cc.Float,tooltip:"\u8d8a\u5c0f\u8d8a\u6162"})],t.prototype,"speed",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderSplash:[function(e,t,n){"use strict";cc._RF.push(t,"0df3eHEW9pIZJZGq5qYMbK8","ShaderSplash");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderSplash",params:[{name:"iResolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"uvfix",type:c.RENDERER_PARAMS.PARAM_FLOAT4},{name:"reverse",type:c.RENDERER_PARAMS.PARAM_INT},{name:"useRandomShape",type:c.RENDERER_PARAMS.PARAM_INT},{name:"useTextureColor",type:c.RENDERER_PARAMS.PARAM_INT},{name:"useSymmetry",type:c.RENDERER_PARAMS.PARAM_INT},{name:"leftValue",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"rightValue",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"baseValue",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"textureRColor",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"textureGColor",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"textureBColor",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"textureAColor",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"shapeRColor",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"shapeGColor",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"shapeBColor",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"shapeAColor",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"duration",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"diffusionSpeed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"extent",type:c.RENDERER_PARAMS.PARAM_FLOAT}],defines:[],vert:a.MVP,frag:"\n        uniform sampler2D texture;\n        uniform vec4 uvfix;\n        uniform vec2 iResolution;\n        varying vec2 v_uv0;\n\n        uniform int reverse;\n        uniform int useSymmetry;\n        uniform int useRandomShape;\n        uniform int useTextureColor;\n        uniform float leftValue;\n        uniform float rightValue;\n        uniform float baseValue;\n        uniform float textureRColor;\n        uniform float textureGColor;\n        uniform float textureBColor;\n        uniform float textureAColor;\n\n        uniform float shapeRColor;\n        uniform float shapeGColor;\n        uniform float shapeBColor;\n        uniform float shapeAColor;\n        uniform float time;\n        uniform float speed;\n        uniform float duration;\n        uniform float diffusionSpeed;\n        uniform float extent;\n\n        // #define pattern sin(1.5)\n\n        // #define pattern sin(1.+fract(.7971*floor(iTime/2.)))\n        // #define extent 7.2\n\n        // thanks to FabriceNeyret2\n        // from dgreensp => https://www.shadertoy.com/view/4ljGDd\n\n\n\n        float magicBox(vec3 p,float pattern)\n        {\n            vec3 uvw = p;\n            p = 1.0 - abs(1. - mod(uvw, 2.0));\n            float lL = length(p), nL = lL, tot = 0.0, c = pattern;\n            for (int i=0; i < 13; i++) {\n                p = abs(p)/(lL*lL) - c;\n                nL = length(p);\n                tot += abs(nL-lL);\n                lL = nL;\n            }\n            return tot;\n        }\n\n        vec2 bigger(in vec2 uv){\n            return uvfix.xy * uv + uvfix.zw;\n        }\n\n        void main(){\n            vec2 uv = bigger(v_uv0);\n            uv.y = 1.0 - uv.y;\n            uv = uv * 5.0 - 2.5;\n\n\n\n            float a = 0.;\n            if(useSymmetry==1){\n                if (uv.x >= 0.) a = rightValue - atan(uv.x, uv.y);\n                if (uv.x < 0.) a =  leftValue - atan(-uv.x, uv.y);\n            }else{\n                if (uv.x >= 0.) a = atan(uv.x, uv.y) * .275;\n                if (uv.x < 0.) a =  3.14159 - atan(-uv.x, -uv.y) * 1.66;\n            }\n\n\n            float t = mod(time*speed, duration);\n            t = exp(t * diffusionSpeed);\n            if (t>extent) t = extent;\n\n            float pattern = 0.0;\n            if(useRandomShape==1){\n                pattern = sin(baseValue+fract(.7971*floor(time*speed/2.)));\n            }else{\n                pattern = sin(baseValue);\n            }\n            float fc = magicBox(vec3(uv,a),pattern) + 1.;\n            fc = 1.-smoothstep(fc, fc+0.001, t/dot(uv,uv));\n\n\n            // \u5224\u65b7\u53cd\u5411\n            vec4 splash;\n            if(reverse==1){\n                splash = vec4(fc);\n            }else{\n                splash = vec4(1.-fc);\n            }\n\n            if(useTextureColor==1){\n                vec4 tex = texture2D(texture, v_uv0);\n                splash *=tex  * vec4(textureRColor,textureGColor,textureBColor,textureAColor);\n                gl_FragColor = vec4(splash);\n            }else{\n                splash *= vec4(shapeRColor,shapeGColor,shapeBColor,shapeAColor);\n                gl_FragColor = vec4(splash);\n            }\n        }\n\n        "};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.speed=1,t.useSymmetry=!1,t.leftValue=1.5,t.rightValue=1.5,t.baseValue=1.5,t.reverse=!1,t.useRandomShape=!1,t.useTextureColor=!1,t.textureRColor=1,t.textureGColor=1,t.textureBColor=1,t.textureAColor=1,t.shapeRColor=1,t.shapeGColor=1,t.shapeBColor=1,t.shapeAColor=1,t.duration=2,t.diffusionSpeed=3,t.extent=7.2,t.time=0,t}return o(t,e),t.prototype.doStart=function(e,t,n){var o=cc.v2(e.node.getContentSize().width,e.node.getContentSize().height),r=i.getUVfix(e.spriteFrame);this.time=0,t.setParamValue("iResolution",o),t.setParamValue("uvfix",r),t.setParamValue("time",this.time),t.setParamValue("speed",this.speed),t.setParamValue("reverse",this.reverse?1:0),t.setParamValue("useSymmetry",this.useSymmetry?1:0),t.setParamValue("useRandomShape",this.useRandomShape?1:0),t.setParamValue("useTextureColor",this.useTextureColor?1:0),t.setParamValue("leftValue",this.leftValue),t.setParamValue("rightValue",this.rightValue),t.setParamValue("baseValue",this.baseValue),t.setParamValue("textureRColor",this.textureRColor),t.setParamValue("textureGColor",this.textureGColor),t.setParamValue("textureBColor",this.textureBColor),t.setParamValue("textureAColor",this.textureAColor),t.setParamValue("shapeRColor",this.shapeRColor),t.setParamValue("shapeGColor",this.shapeGColor),t.setParamValue("shapeBColor",this.shapeBColor),t.setParamValue("shapeAColor",this.shapeAColor),t.setParamValue("duration",this.duration),t.setParamValue("diffusionSpeed",this.diffusionSpeed),t.setParamValue("extent",this.extent)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([f(cc.Float)],t.prototype,"speed",void 0),r([f({tooltip:"\u4f7f\u7528\u5c0d\u7a31\u53c3\u6578"})],t.prototype,"useSymmetry",void 0),r([f({type:cc.Float,tooltip:"\u5de6\u908a\u5c0d\u7a31\u53c3\u6578\u503c",visible:function(){return this.useSymmetry}})],t.prototype,"leftValue",void 0),r([f({type:cc.Float,tooltip:"\u53f3\u908a\u5c0d\u7a31\u53c3\u6578\u503c",visible:function(){return this.useSymmetry}})],t.prototype,"rightValue",void 0),r([f({type:cc.Float,tooltip:"\u5716\u5f62\u57fa\u790e\u53c3\u6578\u503c"})],t.prototype,"baseValue",void 0),r([f({tooltip:"\u53cd\u76f8"})],t.prototype,"reverse",void 0),r([f({tooltip:"\u4f7f\u7528\u4e82\u6578\u5716\u578b"})],t.prototype,"useRandomShape",void 0),r([f({tooltip:"\u4f7f\u7528\u8cbc\u5716\u8272\u5f69"})],t.prototype,"useTextureColor",void 0),r([f({type:cc.Float,tooltip:"\u589e\u5f37\u8cbc\u5716R\u8272\u5f69",visible:function(){return this.useTextureColor}})],t.prototype,"textureRColor",void 0),r([f({type:cc.Float,tooltip:"\u589e\u5f37\u8cbc\u5716G\u8272\u5f69",visible:function(){return this.useTextureColor}})],t.prototype,"textureGColor",void 0),r([f({type:cc.Float,tooltip:"\u589e\u5f37\u8cbc\u5716B\u8272\u5f69",visible:function(){return this.useTextureColor}})],t.prototype,"textureBColor",void 0),r([f({type:cc.Float,tooltip:"\u589e\u5f37\u8cbc\u5716B\u8272\u5f69",visible:function(){return this.useTextureColor}})],t.prototype,"textureAColor",void 0),r([f({type:cc.Float,slide:!0,min:0,max:1,tooltip:"\u5716\u5f62R\u8272\u5f69",visible:function(){return!this.useTextureColor}})],t.prototype,"shapeRColor",void 0),r([f({type:cc.Float,tooltip:"\u5716\u5f62G\u8272\u5f69",slide:!0,min:0,max:1,visible:function(){return!this.useTextureColor}})],t.prototype,"shapeGColor",void 0),r([f({type:cc.Float,tooltip:"\u5716\u5f62B\u8272\u5f69",slide:!0,min:0,max:1,visible:function(){return!this.useTextureColor}})],t.prototype,"shapeBColor",void 0),r([f({type:cc.Float,tooltip:"\u5716\u5f62A\u8272\u5f69",slide:!0,min:0,max:1,visible:function(){return!this.useTextureColor}})],t.prototype,"shapeAColor",void 0),r([f({type:cc.Float,tooltip:"\u6301\u7e8c\u6642\u9593, 0\u8868\u793a\u6301\u7e8c\u986f\u793a"})],t.prototype,"duration",void 0),r([f({type:cc.Float,tooltip:"\u64f4\u6563\u901f\u5ea6"})],t.prototype,"diffusionSpeed",void 0),r([f({type:cc.Float,tooltip:"\u64f4\u6563\u7bc4\u570d"})],t.prototype,"extent",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderWater2:[function(e,t,n){"use strict";cc._RF.push(t,"34dabOIXxZLsJKTG/QFUMPz","ShaderWater2");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderWater2",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT2},{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed_x",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed_y",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"emboss",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"intensity",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"steps",type:c.RENDERER_PARAMS.PARAM_INT},{name:"frequency",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"angle",type:c.RENDERER_PARAMS.PARAM_INT},{name:"delta",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"intence",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"reflectionCutOff",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"reflectionIntence",type:c.RENDERER_PARAMS.PARAM_FLOAT}],defines:[],vert:a.MVP,frag:"\n        uniform sampler2D texture;\n        uniform float time;\n        uniform vec2 resolution;\n\n        //speed\n        uniform float speed;\n        uniform float speed_x;\n        uniform float speed_y;\n\n        // refraction\n        uniform float emboss;\n        uniform float intensity;\n        uniform int steps;\n        uniform float frequency;\n        uniform int angle;\n\n        // reflection\n        uniform float delta;\n        uniform float intence;\n\n        uniform float reflectionCutOff;\n        uniform float reflectionIntence;\n\n        varying vec2 v_uv0;\n        #ifdef GL_ES\n        precision highp float;\n        #endif\n\n        const float PI = 3.1415926535897932;\n        const int MAX_ITERATIONS = 100;\n\n\n        // play with these parameters to custimize the effect\n        // ===================================================\n\n\n\n        // ===================================================\n\n\n        float col(vec2 coord,float time)\n        {\n            float delta_theta = 2.0 * PI / float(angle);\n            float col = 0.0;\n            float theta = 0.0;\n            for (int i = 0; i < MAX_ITERATIONS; i++)\n            {\n                if (i >= steps) break;\n                vec2 adjc = coord;\n                theta = delta_theta*float(i);\n                adjc.x += cos(theta)*time*speed + time * speed_x;\n                adjc.y -= sin(theta)*time*speed - time * speed_y;\n                col = col + cos( (adjc.x*cos(theta) - adjc.y*sin(theta))*frequency)*intensity;\n            }\n\n            return cos(col);\n        }\n\n        //---------- main\n\n        void main()\n        {\n\n            vec2 uv = v_uv0;\n            uv.y = 1.-uv.y;\n\n            vec2 p = uv;\n            vec2 c1 = p;\n            vec2 c2 = p;\n            float cc1 = col(c1,time);\n\n            c2.x += resolution.x/delta;\n            float dx = emboss*(cc1-col(c2,time))/delta;\n\n            c2.x = p.x;\n            c2.y += resolution.y/delta;\n            float dy = emboss*(cc1-col(c2,time))/delta;\n\n            c1.x += dx*2.;\n            c1.y = 1.-(c1.y);\n\n            float alpha = 1.+dot(dx,dy)*intence;\n\n            float ddx = dx - reflectionCutOff;\n            float ddy = dy - reflectionCutOff;\n            // if (ddx > 0. && ddy > 0.)\n                // alpha = pow(alpha, ddx*ddy*reflectionIntence);\n\n            vec4 col = texture2D(texture,c1)*(alpha);\n            gl_FragColor = col;\n        }"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.speed=.2,t.speedX=.3,t.speedY=.3,t.emboss=.1,t.intensity=2.4,t.steps=8,t.frequency=3,t.angle=7,t.delta=60,t.intence=700,t.reflectionCutOff=.012,t.reflectionIntence=2e5,t.time=0,t}return o(t,e),t.prototype.doStart=function(e,t,n){var o=cc.v2(e.node.getContentSize().width,e.node.getContentSize().height);this.time=0,t.setParamValue("resolution",o),t.setParamValue("time",this.time),t.setParamValue("speed",this.speed),t.setParamValue("speed_x",this.speedX),t.setParamValue("speed_y",this.speedY),t.setParamValue("emboss",this.emboss),t.setParamValue("intensity",this.intensity),t.setParamValue("steps",this.steps),t.setParamValue("frequency",this.frequency),t.setParamValue("angle",this.angle),t.setParamValue("delta",this.delta),t.setParamValue("intence",this.intence),t.setParamValue("reflectionCutOff",this.reflectionCutOff),t.setParamValue("reflectionIntence",this.reflectionIntence)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time*this.speed)},r([f(cc.Float)],t.prototype,"speed",void 0),r([f(cc.Float)],t.prototype,"speedX",void 0),r([f(cc.Float)],t.prototype,"speedY",void 0),r([f(cc.Float)],t.prototype,"emboss",void 0),r([f(cc.Float)],t.prototype,"intensity",void 0),r([f(cc.Integer)],t.prototype,"steps",void 0),r([f(cc.Float)],t.prototype,"frequency",void 0),r([f(cc.Integer)],t.prototype,"angle",void 0),r([f(cc.Float)],t.prototype,"delta",void 0),r([f(cc.Float)],t.prototype,"intence",void 0),r([f(cc.Float)],t.prototype,"reflectionCutOff",void 0),r([f(cc.Float)],t.prototype,"reflectionIntence",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderWater:[function(e,t,n){"use strict";cc._RF.push(t,"1b9aeUoGwRM/paXj9T2PJ4U","ShaderWater");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l={name:"ShaderWater",params:[{name:"resolution",type:c.RENDERER_PARAMS.PARAM_FLOAT3},{name:"iTime",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT}],defines:[],vert:a.MVP,frag:"\n        #define TAU 6.12\n        #define MAX_ITER 10\n        #define useModel\n        #define use2DPos\n        precision highp float;\n\n\n        uniform sampler2D texture;\n        varying mediump vec2 v_uv0;\n\n        #ifdef alphaTest\n          uniform lowp float alphaThreshold;\n        #endif\n\n        varying lowp vec4 v_light;\n        #ifdef useTint\n          varying lowp vec4 v_dark;\n        #endif\n        uniform vec3 resolution;\n        uniform float iTime;\n        uniform float speed;\n\n        #ifdef useColor\n            uniform lowp vec4 color;\n        #else\n            varying lowp vec4 v_fragmentColor;\n        #endif\n\n        #define F cos(x-y)*cos(y),sin(x+y)*sin(y)\n\n        vec2 s(vec2 p)\n        {\n            float d=iTime*speed/2.0*0.2,x=8.*(p.x+d),y=8.*(p.y+d);\n            return vec2(F);\n        }\n        void mainImage( out vec4 fragColor, in vec2 fragCoord )\n        {\n            #ifdef use2DPos\n                // \u6362\u6210resolution\n                vec2 rs = resolution.xy;\n                // \u6362\u6210\u7eb9\u7406\u5750\u6807v_texCoord.xy\n                vec2 uv = fragCoord;\n                vec2 q = uv+40./resolution.x*(s(uv)-s(uv+rs));\n                //\u9215\u7684\u5e45\u5ea6\n                //\u53cd\u8f6cy\n                //q.y=1.-q.y;\n\n\n                vec4 texColor = texture2D(texture, q);\n                vec4 finalColor;\n\n                #ifdef useTint\n                finalColor.a = v_light.a * texColor.a;\n                finalColor.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n                #else\n                finalColor = texColor * v_light;\n                #endif\n\n                #ifdef alphaTest\n                if (finalColor.a <= alphaThreshold)\n                    discard;\n                #endif\n                #else\n                // \u6362\u6210resolution\n                vec2 rs = resolution.xy;\n                // \u6362\u6210\u7eb9\u7406\u5750\u6807v_texCoord.xy\n                vec2 uv = fragCoord;\n                vec2 q = uv+20./resolution.x*20(s(uv)-s(uv+rs));\n                //\u53cd\u8f6cy\n                //q.y=1.-q.y;\n\n\n                vec4 texColor = texture2D(texture, q);\n                vec4 finalColor;\n\n            #endif\n\n            float time = iTime*speed/2. * .5+5.;\n            // uv should be the 0-1 uv of texture...\n            // vec2 uv = q.xy;//fragCoord.xy / resolution.xy;\n\n            vec2 p = mod(uv*TAU, TAU)-120.0;\n\n            vec2 i = vec2(p);\n            float c = 0.7;\n            float inten = .0035;\n            //\u5716\u7247\u6578\u503c\u900f\u660e\u5ea6\n            for (int n = 0; n < MAX_ITER; n++)\n            {\n                float t =  time *speed* (1.0 - (2.5 / float(n+30)));\n                i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(1.5*t + i.x));\n                c += 1.0/length(vec2(p.x / (cos(i.x+t)/inten),p.y / (cos(i.y+t)/inten)));\n            }\n            c /= float(MAX_ITER);\n            c = 1.17-pow(c, 1.6);\n            //\u5207\u5272\u7bc4\u570d\n            vec3 colour = vec3(pow(abs(c), 10.0));\n            colour = clamp(colour + vec3(0.0, 0.0, .0), 0.0, texColor.a);\n\n            // \u6df7\u5408\u6ce2\u5149\n            float alpha = c*texColor[3];\n            texColor[0] = texColor[0] + colour[0]*alpha;\n            texColor[1] = texColor[1] + colour[1]*alpha;\n            texColor[2] = texColor[2] + colour[2]*alpha;\n\n            fragColor = finalColor * texColor;\n        }\n        void main()\n        {\n            mainImage(gl_FragColor, v_uv0.xy);\n        }"};s.shaderManager.addShader(l);var p=cc._decorator,u=p.ccclass,f=p.property,d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=l,t.speed=1,t.time=0,t}return o(t,e),t.prototype.doStart=function(e,t,n){var o=this.node.getContentSize(),r=new cc.Vec3(o.width,o.height,0);t.setParamValue("resolution",r),this.time=0,t.setParamValue("time",this.time),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("iTime",this.time)},r([f(cc.Float)],t.prototype,"speed",void 0),t=r([u],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}],ShaderWave:[function(e,t,n){"use strict";cc._RF.push(t,"e5914dYAdRIAZkqVqHYyZHr","ShaderWave");var o=this&&this.__extends||function(){var e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])};return function(t,n){function o(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(o.prototype=n.prototype,new o)}}(),r=this&&this.__decorate||function(e,t,n,o){var r,a=arguments.length,i=a<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,n):o;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,o);else for(var c=e.length-1;c>=0;c--)(r=e[c])&&(i=(a<3?r(i):a>3?r(t,n,i):r(t,n))||i);return a>3&&i&&Object.defineProperty(t,n,i),i};Object.defineProperty(n,"__esModule",{value:!0});var a=e("../MVP"),i=e("../ShaderComponent"),c=e("../ShaderFunc"),s=e("../ShaderManager"),l=cc._decorator,p=l.ccclass,u=l.property,f={name:"ShaderWave",params:[{name:"time",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"speed",type:c.RENDERER_PARAMS.PARAM_FLOAT},{name:"offset",type:c.RENDERER_PARAMS.PARAM_FLOAT2}],vert:a.MVP,frag:"\n        uniform sampler2D texture;\n        uniform float time;\n        uniform float speed;\n        uniform vec2 offset;\n        varying vec2 v_uv0;\n\n        void main() {\n            vec2 coord = v_uv0;\n            coord.x += (sin(coord.y * 30.0 + time*speed * 3.0) / 30.0 * offset[0]);\n            coord.y += (sin(coord.x * 30.0 + time*speed * 3.0) / 30.0 * offset[1]);\n            gl_FragColor = texture2D(texture, coord);\n        }"};s.shaderManager.addShader(f);var d=function(e){function t(){var t=null!==e&&e.apply(this,arguments)||this;return t.shaderFunc=f,t.speed=1,t.offset=cc.v2(0,0),t.time=0,t}return o(t,e),t.prototype.doStart=function(e,t,n){t.setParamValue("offset",new cc.Vec2(.2,.2)),this.time=0,t.setParamValue("time",this.time),t.setParamValue("speed",this.speed)},t.prototype.doUpdate=function(e,t,n){this.time+=n,t.setParamValue("time",this.time)},r([u(cc.Float)],t.prototype,"speed",void 0),r([u(cc.Vec2)],t.prototype,"offset",void 0),t=r([p],t)}(i.default);n.default=d,cc._RF.pop()},{"../MVP":"MVP","../ShaderComponent":"ShaderComponent","../ShaderFunc":"ShaderFunc","../ShaderManager":"ShaderManager"}]},{},["FileDrop","InputeProperty","InputePropertys","ShaderDemo","MVP","ShaderComponent","ShaderFunc","ShaderHook","ShaderManager","ShaderMaterial","ShaderAclouisCircle","ShaderBallOfFire","ShaderClouds","ShaderDissolve2","ShaderElectricGrid","ShaderExplosion","ShaderFire","ShaderFlame301Remix2","ShaderFlame301Remix3","ShaderFlameAvin","ShaderFlameBrady","ShaderFlameOzzy","ShaderFlameWADE","ShaderFluxay","ShaderFluxay2","ShaderGaussBlur","ShaderGrassy","ShaderInterstellar","ShaderRun","ShaderRun2","ShaderRun3","ShaderSearch","ShaderSparks","ShaderSparksDrifting","ShaderSplash","ShaderWater","ShaderWater2","ShaderWave"]);